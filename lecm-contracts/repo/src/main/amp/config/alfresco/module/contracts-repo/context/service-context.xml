<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

<bean id="contracts.LogicEcmContractsTableStructureBootstrap" parent="modelsToRepositoryLoader"
          depends-on="documents.LogicEcmModelsBootstrap,contracts.LogicEcmContractsDictionariesBootstrap,ru.it.lecm.orgstructure.orgstructure-repo.orgStructureBootstrap,dictionary.LogicEcmDictionaryCurrencyModelBootstrap">
        <property name="models">
            <list>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-table-structure-model.xml</value>
            </list>
        </property>
        <property name="labels">
            <list>
                <value>alfresco/module/${artifactId}/messages/lecm-contracts-table-structure-model</value>
            </list>
        </property>
    </bean>

    <bean id="contracts.contractsBootstrap" parent="dictionaryModelBootstrap"
          depends-on="dictionaryBootstrap, documents.LogicEcmModelsBootstrap,ru.it.lecm.contractors.lecm-contractors-repo.contractors-dictionary-bootstrap,
		  ru.it.lecm.orgstructure.orgstructure-repo.orgStructureBootstrap,contracts.LogicEcmContractsDictionariesBootstrap,
		  dictionary.LogicEcmDictionaryCurrencyModelBootstrap,documents.LogicEcmModelsConnectionsBootstrap,
		  documents.dictionaries.LogicEcmModelsBootstrap, lecm.signed-docflow.model-bootstrap,contracts.LogicEcmContractsTableStructureBootstrap">
        <property name="models">
            <list>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-aspects-model.xml</value>
            </list>
        </property>
    </bean>

    <bean id="contracts.LogicEcmContractsBootstrap" parent="modelsToRepositoryLoader"
          depends-on="contracts.contractsBootstrap, eds.models.bootstrap, lecm.signing-v2.helper.model.bootstrap, signingRoutesService, approvalRoutesService">
        <property name="models">
            <list>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-model.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-ext-model.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-additional-document-model.xml</value>
            </list>
        </property>
        <property name="labels">
            <list>
                <value>alfresco/module/${artifactId}/messages/lecm-contracts-model</value>
                <value>alfresco/module/${artifactId}/messages/lecm-additional-document-model</value>
                <value>alfresco/module/${artifactId}/messages/lecm-contracts-messages</value>
            </list>
        </property>
    </bean>

    <bean id="contracts.LogicEcmContractsDictionariesBootstrap" parent="modelsToRepositoryLoader"
          depends-on="dictionaryBootstrap, ru.it.lecm.dictionary.dictionary-repo.dictionary, eds.models.bootstrap">
        <property name="models">
            <list>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-dictionaries-model.xml</value>
            </list>
        </property>
        <property name="labels">
            <list>
                <value>alfresco/module/${artifactId}/messages/lecm-contracts-dictionaries-model</value>
            </list>
        </property>
    </bean>

    <!--временно все сообщения деплоятся здесь. TODO деплоить сообщения через репозиторий-->
    <!--<bean id="contracts.contracts.temp.messages.bootstrap" parent="dictionaryModelBootstrap"-->
    <!--depends-on="dictionaryBootstrap">-->
    <!--<property name="labels">-->
    <!--<list>-->
    <!--<value>alfresco/module/${artifactId}/messages/lecm-contracts-model</value>-->
    <!--<value>alfresco/module/${artifactId}/messages/lecm-additional-document-model</value>-->
    <!--<value>alfresco/module/${artifactId}/messages/lecm-contracts-dictionaries-model</value>-->
    <!--<value>alfresco/module/${artifactId}/messages/lecm-contracts-table-structure-model</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <util:constant id="CONTRACTS_ROOT_ID"
                   static-field="ru.it.lecm.contracts.beans.ContractsBeanImpl.CONTRACTS_ROOT_ID"/>
    <util:constant id="CONTRACTS_ROOT_NAME"
                   static-field="ru.it.lecm.contracts.beans.ContractsBeanImpl.CONTRACTS_ROOT_NAME"/>

    <bean id="contractService" class="ru.it.lecm.contracts.beans.ContractsBeanImpl" parent="baseBean"
          depends-on="nodeService, documentService, documentConnectionService,documentMembersService,regNumbersService, notificationsService"
          init-method="init">
        <property name="searchService" ref="searchService"/>
        <property name="documentService" ref="documentService"/>
        <property name="authService" ref="authenticationService"/>
        <property name="namespaceService" ref="namespaceService"/>
        <property name="folders">
            <map>
                <entry key="#{CONTRACTS_ROOT_ID}" value="#{CONTRACTS_ROOT_NAME}"/>
            </map>
        </property>
    </bean>

    <bean id="contractsScript" parent="baseScript" class="ru.it.lecm.contracts.script.ContractsWebScriptBean"
          depends-on="nodeService, contractService">
        <property name="extensionName">
            <value>contracts</value>
        </property>
        <property name="transactionService" ref="transactionService"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="contractService" ref="contractService"/>
        <property name="orgstructureService" ref="serviceOrgstructure"/>
        <property name="preferenceService" ref="preferenceService"/>
        <property name="authService" ref="authenticationService"/>
        <property name="namespaceService" ref="namespaceService"/>
        <property name="documentService" ref="documentService"/>
        <property name="documentMembersService" ref="documentMembersService"/>
    </bean>

    <bean id="contract.businessJournalDictionaryBootstrap"
          parent="lecmDictionaryBootstrap"
          depends-on="ru.it.lecm.orgstructure.orgstructure-repo.orgBootstrap,
                      ru.it.lecm.business-journal.business-journal-repo.businessJournalBootstrap,
                      ru.it.lecm.notifications.notifications-repo.notificationsTemplatesBootstrap,
                      businessJournalLogEventsPolicy, documents.LogicEcmConnectionTypesBootstrap,
					  regNumbers.regNumbersTemplatesDicBootstrap">
        <property name="dictionaries">
            <list>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-types.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-contract-documents-types.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-contract-delete-reasons.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-reference-data.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-status-types.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-business-journal-objectType-items.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-roles-items.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-regnumbers.xml</value>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-nt-items.xml</value>
            </list>
        </property>
    </bean>

    <util:list id="contracts.groupOperations">
        <value>alfresco/module/${artifactId}/actions/reservation-contracts.xml</value>
        <value>alfresco/module/${artifactId}/actions/force-approval.xml</value>
        <value>alfresco/module/${artifactId}/actions/reject-approval.xml</value>
    </util:list>
    <bean parent="lecmDictionaryBootstrap" depends-on="groupActionsService"
          p:rootPath="/Business platform/LECM/Сервис Групповые операции"
          p:dictionaries-ref="contracts.groupOperations"/>

    <bean id="contract.defaultStatemachine" parent="defaultStatemachines">
        <property name="statemachineName" value="lecm-contract:document"/>
        <property name="path" value="alfresco/module/${artifactId}/models/lecm-contracts-default-statemachine.xml"/>
    </bean>
    <!-- Автоматическое развертывание машин состояний -->
    <bean id="contract.defaultStatemachine.bootstrap" parent="defaultStatemachineBootstrap">
        <property name="defaultStateMachines" ref="contract.defaultStatemachine" />
        <property name="stateMachineName" value="lecm-contract:document"/>
    </bean>

    <bean id="additionalDocument.defaultStatemachine" parent="defaultStatemachines">
        <property name="statemachineName" value="lecm-additional-document:additionalDocument"/>
        <property name="path" value="alfresco/module/${artifactId}/models/lecm-additionalDocument-default-statemachine.xml"/>
    </bean>
    <!-- Автоматическое развертывание машин состояний -->
    <bean id="additionalDocument.defaultStatemachine.bootstrap" parent="defaultStatemachineBootstrap">
        <property name="defaultStateMachines" ref="additionalDocument.defaultStatemachine" />
        <property name="stateMachineName" value="lecm-additional-document:additionalDocument"/>
    </bean>

    <bean id="contractsStatusesFilter" parent="documentStatusesFilter">
        <property name="defaultFilters">
            <map>
                <entry key="lecm-contract:document" value="Все действующие"/>
                <entry key="lecm-contract:document-archive" value="Завершенные"/>
                <entry key="lecm-additional-document:additionalDocument" value="Все"/>
                <entry key="lecm-additional-document:additionalDocument-archive" value="Все"/>
            </map>
        </property>
        <property name="filters">
            <map>
                <entry key="lecm-contract:document">
                    <map>
                        <entry key="Все действующие"
							   value="Черновик, Проект зарегистрирован, На согласовании, Согласован, На подписании, Подписан, На доработке, На подписании у контрагента, Зарегистрирован, Действует, Приостановлен"/>
                        <entry key="Проекты"
                               value="Черновик, Проект зарегистрирован, На согласовании, Согласован, На подписании, Подписан, На доработке, На подписании у контрагента"/>
                        <entry key="На исполнении" value="Зарегистрирован, Действует, Приостановлен"/>
                    </map>
                </entry>
            </map>
        </property>
        <property name="archiveFilters">
            <map>
                <entry key="lecm-contract:document">
                    <map>
                        <entry key="Завершенные" value="Исполнен, Расторгнут"/>
                        <entry key="Корзина" value="Аннулирован, Удален"/>
                    </map>
                </entry>
                <entry key="lecm-additional-document:additionalDocument">
                    <map>
                        <entry key="Завершенные" value="Исполнен, Отменен"/>
                        <entry key="Корзина" value="Аннулирован"/>
                    </map>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="contractsWorkflowBootstrap" parent="workflowDeployer"
          depends-on="contracts.LogicEcmContractsDictionariesBootstrap, statemachine.aspects.LogicEcmModelsBootstrap">
        <property name="workflowDefinitions">
            <list>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">
                        alfresco/module/${artifactId}/workflow/lecm-contracts-create-on-basis.bpmn20.xml
                    </prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">${redeploy.process.definitions}</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">
                        alfresco/module/${artifactId}/workflow/lecm-contracts-delete-reason.bpmn20.xml
                    </prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">${redeploy.process.definitions}</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">
                        alfresco/module/${artifactId}/workflow/lecm-contracts-contract-time.bpmn20.xml
                    </prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">${redeploy.process.definitions}</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">alfresco/module/${artifactId}/workflow/lecm-contracts-termination.bpmn20.xml
                    </prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">${redeploy.process.definitions}</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">alfresco/module/${artifactId}/workflow/lecm-contracts-executed.bpmn20.xml
                    </prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">${redeploy.process.definitions}</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">
                        alfresco/module/${artifactId}/workflow/lecm-contracts-sign-contractor.bpmn20.xml
                    </prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">${redeploy.process.definitions}</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">
                        alfresco/module/${artifactId}/workflow/lecm-additionalDocument-sign-contractor.bpmn20.xml
                    </prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">${redeploy.process.definitions}</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">
                        alfresco/module/${artifactId}/workflow/lecm-additionalDocument-cancel.bpmn20.xml
                    </prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">${redeploy.process.definitions}</prop>
                </props>
            </list>
        </property>
        <property name="models">
            <list>
                <value>alfresco/module/${artifactId}/models/lecm-contracts-workflow-model.xml</value>
            </list>
        </property>
        <property name="labels">
            <list>
                <value>alfresco/module/${artifactId}/messages/lecm-contracts-workflow</value>
            </list>
        </property>
        <property name="repositoryWorkflowDefsLocations" ref="customWorkflowDefsRepositoryLocation"/>
    </bean>

    <bean id="contractsInitiatorNotificationExecutor"
          class="ru.it.lecm.contracts.schedule.InitiatorEveryDayNotificationExecutor" parent="action-executer">
        <property name="ignoreLock" value="false"/>
        <property name="notificationsService" ref="notificationsService"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="documentService" ref="documentService"/>
        <property name="publicAction" value="false"/>
    </bean>

    <bean id="contractsInitiatorNotificationSchedule"
          class="ru.it.lecm.contracts.schedule.InititatorEveryDayNotificationSchedule" parent="baseTransactionalSchedule">
        <property name="cronExpression">
            <value>0 0 3 */1 * ?</value>
        </property>
        <property name="onServerStart">
            <value>false</value>
        </property>
        <property name="firstStartExpression">
            <value>0 */30 * * * ?</value>
        </property>
        <property name="jobName">
            <value>contracts-notifications-job</value>
        </property>
        <property name="jobGroup">
            <value>contracts-notifications</value>
        </property>
        <property name="triggerName">
            <value>contracts-notifications-trigger</value>
        </property>
        <property name="triggerGroup">
            <value>contracts-notifications</value>
        </property>
        <property name="actionName">
            <value>contractsInitiatorNotificationExecutor</value>
        </property>
        <property name="contractsService" ref="contractService"/>
    </bean>

    <!-- Оповещении о наступленни даты начала/конца этапа -->
    <bean id="contractsStageDateNotificationExecutor"
          class="ru.it.lecm.contracts.schedule.ContractStageDateNotificationExecutor" parent="action-executer">
        <property name="ignoreLock" value="false"/>
        <property name="notificationsService" ref="notificationsService"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="documentService" ref="documentService"/>
        <property name="documentTableService" ref="documentTableService"/>
        <property name="publicAction" value="false"/>
    </bean>

    <bean id="contractsStageDateNotificationSchedule"
          class="ru.it.lecm.contracts.schedule.ContractStageDateNotificationSchedule" parent="baseTransactionalSchedule">
        <property name="onServerStart">
            <value>false</value>
        </property>
        <property name="cronExpression">
            <value>0 0 5 */1 * ?</value>
        </property>
        <property name="firstStartExpression">
            <value>0 */15 * * * ?</value>
        </property>
        <property name="jobName">
            <value>contracts-stage-notifications-job</value>
        </property>
        <property name="jobGroup">
            <value>contracts-stage-notifications</value>
        </property>
        <property name="triggerName">
            <value>contracts-stage-notifications-trigger</value>
        </property>
        <property name="triggerGroup">
            <value>contracts-stage-notifications</value>
        </property>
        <property name="actionName">
            <value>contractsStageDateNotificationExecutor</value>
        </property>
        <property name="documentService" ref="documentService"/>
    </bean>

    <!-- #Оповещении о наступленни даты начала/конца этапа# -->

    <bean id="contracts.LogicEcmContractsTaggedCounterRegistrator"
          parent="regNumbersTaggedCounterRegistrator"
          depends-on="contracts.LogicEcmContractsBootstrap">
        <property name="documentType" value="lecm-contract:document"/>
        <property name="tags">
            <list>
                <value>contracts_system</value>
                <value>contracts_project</value>
            </list>
        </property>
    </bean>

    <bean id="contractStagesPolicy" class="ru.it.lecm.contracts.policies.ContractStagesPolicy"
          depends-on="contracts.LogicEcmContractsTableStructureBootstrap"
          init-method="init">
        <property name="nodeService" ref="nodeService"/>
        <property name="policyComponent" ref="policyComponent"/>
    </bean>

    <bean id="webscript.ru.it.lecm.contracts.substitute.string.get"
          class="ru.it.lecm.contracts.AssociationSubstituteString" parent="webscript">
        <property name="substituteService" ref="substitudeService"/>
    </bean>

    <bean id="contracts.exportSettingsInitializer" parent="dictionary.exportSettingsInitializer"
          class="ru.it.lecm.dictionary.beans.ExportSettingsInitializerBean">
        <constructor-arg>
            <map>
                <entry key="lecm-contract-dic:contract-type">
                    <list>
                        <value>cm:name</value>
                        <value>lecm-contract-dic:contract-type-code</value>
                    </list>
                </entry>
                <entry key="lecm-contract-dic:contract-documents-type">
                    <list>
                        <value>cm:name</value>
                        <value>lecm-contract-dic:contract-documents-type-code</value>
                    </list>
                </entry>
                <entry key="lecm-contract-dic:reference-data">
                    <list>
                        <value>cm:name</value>
                        <value>lecm-contract-dic:reference-data-link</value>
                    </list>
                </entry>
                <entry key="lecm-contract-dic:delete-reason">
                    <list>
                        <value>cm:name</value>
                        <value>lecm-contract-dic:delete-reason-code</value>
                    </list>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="contractsCopySettings" class="ru.it.lecm.documents.beans.DocumentCopySettings">
        <property name="propsToCopy">
            <list>
                <value>lecm-contract:summaryContent</value>
                <value>lecm-contract:signatoryCounterparty</value>
            </list>
        </property>
        <property name="assocsToCopy">
            <list>
                <value>lecm-contract:typeContract-assoc</value>
                <value>lecm-contract:partner-assoc</value>
                <value>lecm-document:subject-assoc</value>
                <value>lecm-contract:representative-assoc</value>
                <value>lecm-contract:currency-assoc</value>
            </list>
        </property>
    </bean>

    <bean id="contractsCopySettingsBean" parent="documentCopySettingsBean">
        <property name="settings">
            <map>
                <entry key="lecm-contract:document" value-ref="contractsCopySettings"/>
            </map>
        </property>
    </bean>

    <bean id="listOfUsedContractsTypes" parent="listOfUsedTypes">
        <property name="types">
            <map>
                <entry key="lecm-additional-document:additionalDocument" value="Документ к договору"/>
                <entry key="lecm-contract-dic:contract-type" value="Вид договора"/>
                <entry key="lecm-contract-dic:contract-documents-type" value="Вид документа к договору"/>
                <entry key="lecm-contract:document" value="Договор"/>
            </map>
        </property>
    </bean>

    <bean id="contracts.reports.LogicEcmBootstrap" parent="lecmDictionaryBootstrap"
          depends-on="reportsEditorService,reportsEditor.LogicEcmDictionariesBootstrap,
          reportsEditorOnCreateAssocsPolicy,reportsEditorTemplatePolicy,
          dataSourcePolicy,reportDescriptorPolicy,reporting.LogicEcmDictionariesBootstrap">
        <property name="rootPath" value="/Business platform/LECM/Сервис Редактор Отчетов/Отчеты"/>
        <property name="dictionaries">
            <list>
                <value>alfresco/module/${artifactId}/reports/contract-dossier.xml</value>
                <value>alfresco/module/${artifactId}/reports/contract-stages.xml</value>
                <value>alfresco/module/${artifactId}/reports/contract-delta-by-id.xml</value>
                <value>alfresco/module/${artifactId}/reports/contract-info.xml</value>
                <value>alfresco/module/${artifactId}/reports/contract-registry.xml</value>
                <value>alfresco/module/${artifactId}/reports/docflow-status-timings.xml</value>
            </list>
        </property>
        <property name="xmlImportListener" ref="contracts.reportsDeployer"/>
    </bean>

    <bean id="contracts.reportsDeployer" parent="reportsDeployer">
        <property name="reportsForDeploy">
            <list>
                <value>contract-dossier-byid</value>
                <value>contract-stages</value>
                <value>contract-delta-by-id</value>
                <value>contract-info</value>
                <value>contract-registry</value>
                <value>docflow-status-timings</value>
            </list>
        </property>
    </bean>

    <bean id="contracts.arm.settings.LogicEcmBootstrap" parent="lecmDictionaryBootstrap"
          depends-on="eds.arm.filters.LogicEcmBootstrap, arm.LogicEcmModelsBootstrap,arm.settings.LogicEcmBootstrap,eds.documents.arm.settings.LogicEcmBootstrap, arm.LogicEcmBootstrap, armService, arm.filters.LogicEcmBootstrap, documents.LogicEcmConnectionTypesBootstrap, documents.arm.settings.LogicEcmBootstrap">

        <property name="rootPath" value="/Business platform/LECM/Сервис АРМ"/>
        <property name="dictionaries">
            <list>
                <value>alfresco/module/${artifactId}/arm/contracts-arm-filters.xml</value>
                <value>alfresco/module/${artifactId}/arm/contracts-arm.xml</value>
                <value>alfresco/module/${artifactId}/arm/contracts-settings-arm.xml</value>
            </list>
        </property>
    </bean>

	<bean id="webscript.ru.it.lecm.contracts.dashlet.GetRecentActivity.get"
		  class="ru.it.lecm.contracts.webscripts.GetRecentActivity">
		<property name="searchService" ref="SearchService"/>
		<property name="businessJournalService" ref="businessJournalService"/>
		<property name="maxDays" value="${lecm.contracts.dashlet.recentActivity.maxDays}"/>
		<property name="maxRecords" value="${lecm.contracts.dashlet.recentActivity.maxRecords}"/>
        <property name="processorService" ref="searchQueryProcessorService"/>
	</bean>

    <bean id="contracts.ConfigToRepositoryLoader" parent="configsToRepositoryLoader">
        <property name="configs">
            <list>
                <value>alfresco/module/contracts-repo/reports/configs/contracts.properties</value>
            </list>
        </property>
    </bean>

    <bean parent="lecmMessagesLoader">
        <property name="messages">
            <list>
                <value>alfresco/module/${artifactId}/messages/lecm-contract-document</value>
                <value>alfresco/module/${artifactId}/messages/lecm-additional-document-document</value>
            </list>
        </property>
    </bean>

    <!-- Оповещении о приближении даты окончания этапа -->
    <bean id="contractStageEndDateNotificationExecutor"
          class="ru.it.lecm.contracts.schedule.ContractStageEndDateNotificationExecutor" parent="action-executer">
        <property name="ignoreLock" value="false"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="namespaceService" ref="namespaceService"/>
        <property name="notificationsService" ref="notificationsService"/>
        <property name="documentGlobalSettings" ref="documents.global-settings.service"/>
        <property name="documentService" ref="documentService"/>
        <property name="documentTableService" ref="documentTableService"/>
        <property name="documentMembersService" ref="documentMembersService"/>
        <property name="orgstructureService" ref="serviceOrgstructure"/>
        <property name="templateCode" value="CONTRACT_STAGE_END"/>
        <property name="publicAction" value="false"/>
    </bean>

    <bean id="contractStageEndDateNotificationSchedule"
          class="ru.it.lecm.contracts.schedule.ContractStageEndDateNotificationSchedule" parent="baseTransactionalSchedule">
        <property name="cronExpression" value="0 45 3 * * ?"/>
        <property name="jobName" value="lecm-contracts-stage-end-notifications-job"/>
        <property name="jobGroup" value="lecm-contracts-stage-end-notifications"/>
        <property name="triggerName" value="lecm-contracts-stage-end-notifications-trigger"/>
        <property name="triggerGroup" value="lecm-contracts-stage-end-notifications"/>
        <property name="actionName" value="contractStageEndDateNotificationExecutor"/>
        <property name="documentService" ref="documentService"/>
        <property name="documentGlobalSettings" ref="documents.global-settings.service"/>
    </bean>

    <!--Регистрация шедуллеров в "Центр управления запуском регулярных заданий"-->
    <bean id="contract.reg.jobs" parent="regularJobsRegistrator">
        <property name="schedulers">
            <map>
                <entry key="contracts-notifications-trigger" value-ref="contractsInitiatorNotificationSchedule"/>
                <entry key="contracts-stage-notifications-trigger" value-ref="contractsStageDateNotificationSchedule"/>
                <entry key="lecm-contracts-stage-end-notifications-trigger" value-ref="contractStageEndDateNotificationSchedule"/>
            </map>
        </property>
    </bean>


    <bean id="additionalDocCopySettings" class="ru.it.lecm.documents.beans.DocumentCopySettings">
        <property name="propsToCopy">
            <list>
                <value>lecm-additional-document:date</value>
            </list>
        </property>
        <property name="assocsToCopy">
            <list>
                <value>lecm-additional-document:additionalDocumentType</value>
                <value>lecm-additional-document:document-assoc</value>
            </list>
        </property>
    </bean>
    <bean id="additionalDocCopySettingsBean" parent="documentCopySettingsBean">
        <property name="settings">
            <map>
                <entry key="lecm-additional-document:additionalDocument" value-ref="additionalDocCopySettings"/>
            </map>
        </property>
    </bean>
</beans>
