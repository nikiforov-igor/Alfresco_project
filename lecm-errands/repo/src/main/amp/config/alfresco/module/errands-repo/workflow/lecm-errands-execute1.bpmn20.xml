<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/errands/workflow/execute_1/1.0">
    <process id="errandsExecute_1" name="Исполнить поручение(1)">
        <startEvent id="startExecute" name="Start" activiti:formKey="lecmErrandWf:execute_1"></startEvent>
        <endEvent id="endExecute" name="End"></endEvent>
        <scriptTask id="executeErrand" name="Errand execute" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                        <import resource="classpath:/alfresco/module/errands-repo/workflow/scripts/errands-execute-errand-script.js">
                            var document = bpm_package.children[0];
                            if (document) {
                                var reportStatus = document.properties["lecm-errands-ts:execution-report-status"];
                                var reportText = execution.getVariable("lecmErrandWf_execute_1ReportText");
                                var isExecute = lecmErrandWf_execute_1Execute;
                                var closeChild = lecmErrandWf_execute_1CloseChild;

                                if (reportStatus != "PROJECT"){
                                    document.properties["lecm-errands:execution-report-create-date"] = new Date();
                                }
                                var attachments = [];
                                var attachmentsList = execution.getVariable("lecmErrandWf_execute_1Attachment")
                                if (attachmentsList && attachmentsList.size()) {
                                    for (var i = 0; i < attachmentsList.size(); i++){
                                        attachments.push(attachmentsList.get(i));
                                    }
                                }
                                var connectedDocuments = [];
                                var connectedDocumentsList = execution.getVariable("lecmErrandWf_execute_1ConnectedDocument")
                                if (connectedDocumentsList && connectedDocumentsList.size()) {
                                    for (var i = 0; i < connectedDocumentsList.size(); i++) {
                                        connectedDocuments.push(connectedDocumentsList.get(i));
                                    }
                                }
                                ExecuteErrandScript.fillExecutionReport(document, attachments, connectedDocuments, reportText, closeChild);
                                if (!isExecute) {
                                    document.properties["lecm-errands:execution-report-status"] = "PROJECT";
                                    document.properties["lecm-errands:project-report-text"] = reportText;
                                    document.properties["lecm-errands:project-report-attachment"] = attachments.map(function(a) {
                                        return a.nodeRef.toString();
                                    }).join();
                                    document.properties["lecm-errands:project-report-connections"] = connectedDocuments.map(function(a) {
                                        return a.nodeRef.toString();
                                    }).join();
                                } else {
      	                            ExecuteErrandScript.executeErrand(document, closeChild);
                                }
                                document.properties["lecm-errands:project-report-ref"] = null;
                                document.save();
                            }
                        ]]></activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script>var test=1;</script>
        </scriptTask>
        <receiveTask id="errandReceiveTask" name="Receive Task"></receiveTask>
        <sequenceFlow id="flow1" name="" sourceRef="startExecute" targetRef="executeErrand"></sequenceFlow>
        <sequenceFlow id="flow2" name="" sourceRef="executeErrand" targetRef="errandReceiveTask"></sequenceFlow>
        <sequenceFlow id="flow3" name="" sourceRef="errandReceiveTask" targetRef="endExecute"></sequenceFlow>
    </process>
</definitions>
