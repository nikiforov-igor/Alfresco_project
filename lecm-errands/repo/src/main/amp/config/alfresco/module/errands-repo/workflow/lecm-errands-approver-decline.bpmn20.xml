<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/errands/workflow/approverDecline/1.0">
    <process id="errandsApproverDecline" name="Получатель отчета: Вернуть на доработку">
        <startEvent id="startApproverDecline" name="Start" activiti:formKey="lecmErrandWf:approverDecline"></startEvent>
        <endEvent id="endApproverDecline" name="End"></endEvent>
        <scriptTask id="approverDecline" name="Approver Decline" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            var document = bpm_package.children[0];
                            var currentUser = orgstructure.getCurrentEmployee();
                            if (document) {
                                var currentReport = null;
                                var reportsTable = document.assocs["lecm-errands-ts:execution-reports-assoc"][0];
                                if (reportsTable){
                                    var props = [];
                                    props["lecm-errands-ts:execution-report-text"] = document.properties["lecm-errands:execution-report"];
                                    props["lecm-errands-ts:execution-report-status"] = "DECLINE";
                                    props["lecm-errands-ts:execution-report-decline-reason"] = lecmErrandWf_approverDeclineReason;
                                    props["lecm-errands-ts:execution-report-create-date"] = document.properties["lecm-errands:execution-report-create-date"];
                                    props["lecm-errands-ts:execution-report-decline-date"] = new Date();
                                    var report = reportsTable.createNode(null, "lecm-errands-ts:execution-report", props);
                                    var executionAttachmentAssoc = document.assocs["lecm-errands:execution-report-attachment-assoc"];
                                    if (executionAttachmentAssoc && executionAttachmentAssoc.length) {
                                        executionAttachmentAssoc.forEach(function(attachment){
                                            report.createAssociation(attachment, "lecm-errands-ts:execution-report-attachment-assoc");
                                        });
                                    }
                                    var executionConnectedDocAssoc = document.assocs["lecm-errands:execution-connected-document-assoc"];
                                    if (executionConnectedDocAssoc && executionConnectedDocAssoc.length) {
                                        executionConnectedDocAssoc.forEach(function(doc){
                                            report.createAssociation(doc, "lecm-errands-ts:execution-report-connected-document-assoc");
                                        });
                                    }
                                    report.save();
                                    document.properties["lecm-errands:execution-report-decline-reason"] = lecmErrandWf_approverDeclineReason;
                                    document.properties["lecm-errands:execution-report-status"] = "DECLINE";
                                    document.properties["lecm-errands:project-report-ref"] = report.nodeRef.toString();
                                    document.save();

                                    var executor = null;
                                    var executorAssoc = document.assocs["lecm-errands:executor-assoc"];
                                    if (executorAssoc && executorAssoc.length == 1) {
                                        executor = executorAssoc[0];
                                    }

                                    notifications.sendNotificationFromCurrentUser({
                                        recipients: [executor],
                                        templateCode: 'ERRANDS_DECLINE_EXEC',
                                        templateConfig: {
                                            mainObject: document,
                                            eventExecutor: currentUser,
                                            reason: lecmErrandWf_approverDeclineReason
                                        }
                                    });
                                }
                            }
                        ]]></activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script>var test=1;</script>
        </scriptTask>
        <receiveTask id="errandReceiveTask" name="Receive Task"></receiveTask>
        <sequenceFlow id="flow1" name="" sourceRef="startApproverDecline" targetRef="approverDecline"></sequenceFlow>
        <sequenceFlow id="flow2" name="" sourceRef="approverDecline" targetRef="errandReceiveTask"></sequenceFlow>
        <sequenceFlow id="flow3" name="" sourceRef="errandReceiveTask" targetRef="endApproverDecline"></sequenceFlow>
    </process>
</definitions>
