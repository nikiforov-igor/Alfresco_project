module.id=${project.artifactId}
module.title=${project.name}
module.description=${project.description}
module.version=${noSnapshotVersion}.${buildNumber}

#0.8.0.0 initial release
#0.8.0.1 fix for javascripts that were configured incorrectly (Harvesting)
#0.8.0.2 fix for default null values for other types than d:text, fix for mltext fields like names of Company Home
#8.0.0.2 fix for languages where mltext fields for Data Dictionary are different. Switch to ActionHandlers
#0.8.0.3 fix for applying AMP. lecm-reporting-repo -> lecm-reporting-repo in file-mapping.props . Ugly: message bundles are in alfresco/classes/extension/org_alfresco_reporting/messages...
#0.8.0.4 fix for too many child nodes. If you got 50.000 users, the userhomes child nodes will explode without a good reason. Made Dates timezone aware, and changed mask to HH:mm:ss instead of hh:mm:ss, fix for categories with blanks in table/column names
#0.8.1.0 Harvesting rewrite in Java. introduced PropertyProcessors to enable Workflow tasks, and to modularize the project Each ProeprtyProcessor processes a specific type of objects
#0.9.0.2 rework on PropertyProcessors, and introduced iBatis in DB layer, messed a lot to make Oracle work
#1.0.0.0 Finalized iBatis layer, fixed quite some bugs, made report execution work against multiple DB's. Sample reports against the 3 DB's
#1.0.0.1 Bugs fixed related to Oracle processing of ID's
#1.0.0.2 Fixed Oracle issue in harvesting and not-displaying Reporting Console Fixed Report Definitions
#1.0.0.3 Fixed Oracle Report definitions. Added table reportoutput
#1.0.0.4 adjusted cron settings report execution
#1.0.1.0 upgraded to Pentaho Reporting 5.1.0
#1.0.1.1 fix for report execution that ignored other than hourly execution
#1.0.1.2 fix for actively opening/closing DB connections, was an issue with Oracle && increase robustness against broken nodes. Never released publicly.
#1.0.1.3 better fix on closed DB connection when executing reports.
#1.0.1.4 Behaviour tuning 4.2.2: includes node.exists() before executing hasAspect()... (most likely backward compatibility problem too...) 
