<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<util:list id="meetingsDictionariesModels">
		<value>alfresco/module/${artifactId}/models/lecm-meetings-dictionaries-model.xml</value>
	</util:list>
	<util:list id="meetingsDictionariesLabels">
		<value>alfresco/module/${artifactId}/messages/lecm-meetings-dictionaries-model</value>
	</util:list>

	<bean id="meetings.dictionaries.modelsBootstrap" parent="dictionaryModelBootstrap"
		  depends-on="dictionaryBootstrap
				,ru.it.lecm.dictionary.dictionary-repo.dictionary
				,ru.it.lecm.contractors.lecm-contractors-repo.contractors-dictionary-bootstrap
				,ru.it.lecm.orgstructure.orgstructure-repo.orgStructureBootstrap
				,documents.dictionaries.LogicEcmModelsBootstrap
                ,eds.dictionary.bootstrap"
		  p:models-ref="meetingsDictionariesModels"
		  p:labels-ref="meetingsDictionariesLabels"
	/>

	<util:list id="meetingsModels">
		<value>alfresco/module/${artifactId}/models/lecm-meetings-table-structure-model.xml</value>
		<value>alfresco/module/${artifactId}/models/lecm-meetings-model.xml</value>
	</util:list>
	<util:list id="meetingsLabels">
		<value>alfresco/module/${artifactId}/messages/lecm-meetings-table-structure-model</value>
		<value>alfresco/module/${artifactId}/messages/lecm-meetings-model</value>
		<value>alfresco/module/${artifactId}/messages/lecm-meetings-messages</value>
	</util:list>

	<bean id="meetings.ModelsBootstrap" parent="modelsToRepositoryLoader"
		  depends-on="dictionaryBootstrap,
					meetings.dictionaries.modelsBootstrap,
					documents.LogicEcmModelsConnectionsBootstrap,
					documents.dictionaries.LogicEcmModelsBootstrap,
					lecm.approve3.model.bootstrap,
					events.LogicEcmInternalBootstrap,approvalRoutesService
				 "
		  p:models-ref="meetingsModels"
		  p:labels-ref="meetingsLabels"
	/>


	<util:list id="meetingsDictionaries">
		<value>alfresco/module/${artifactId}/dictionaries/lecm-meetings-br-items.xml</value>
		<value>alfresco/module/${artifactId}/dictionaries/lecm-meetings-agenda-point-states.xml</value>
		<value>alfresco/module/${artifactId}/dictionaries/lecm-meetings-bj-items.xml</value>
	</util:list>

	<util:list id="protocolDictionariesModels">
		<value>alfresco/module/${artifactId}/models/lecm-protocol-dictionaries-model.xml</value>
	</util:list>
	<util:list id="protocolDictionariesLabels">
		<value>alfresco/module/${artifactId}/messages/lecm-protocol-dictionaries</value>
	</util:list>

	<bean id="protocol.dictionaries.modelsBootstrap" parent="dictionaryModelBootstrap"
		  depends-on="dictionaryBootstrap
				,ru.it.lecm.dictionary.dictionary-repo.dictionary
				,ru.it.lecm.contractors.lecm-contractors-repo.contractors-dictionary-bootstrap
				,ru.it.lecm.orgstructure.orgstructure-repo.orgStructureBootstrap
				,documents.dictionaries.LogicEcmModelsBootstrap
                ,eds.dictionary.bootstrap"
		  p:models-ref="protocolDictionariesModels"
		  p:labels-ref="protocolDictionariesLabels"
	/>
	<util:list id="protocolModels">
		<value>alfresco/module/${artifactId}/models/lecm-protocol-table-structure-model.xml</value>
		<value>alfresco/module/${artifactId}/models/lecm-protocol-model.xml</value>
	</util:list>
	<util:list id="protocolLabels">
		<value>alfresco/module/${artifactId}/messages/lecm-protocol-table-structure-model</value>
		<value>alfresco/module/${artifactId}/messages/lecm-protocol-model</value>
		<value>alfresco/module/${artifactId}/messages/lecm-protocol-messages</value>
	</util:list>

	<bean id="protocol.ModelsBootstrap" parent="modelsToRepositoryLoader"
		  depends-on="documents.LogicEcmModelsBootstrap,
		      dictionaryBootstrap,
			  ru.it.lecm.dictionary.dictionary-repo.dictionary,
		      ru.it.lecm.orgstructure.orgstructure-repo.orgStructureBootstrap,
  			  eds.models.bootstrap,
			  errands.LogicEcmModelsBootstrap
			  review.model.bootstrap,approvalRoutesService,lecm.signing-v2.helper.model.bootstrap"
		  p:models-ref="protocolModels"
		  p:labels-ref="protocolLabels"
	/>

	<bean id="meetings.LogicEcmConnectionTypesBootstrap" parent="lecmDictionaryBootstrap"
		  depends-on="meetings.dictionaries.modelsBootstrap"
		  p:dictionaries-ref="meetingsDictionaries"
	/>

	<bean id="protocol.meetings.LogicEcmProtocolDictionariesBootstrap" parent="lecmDictionaryBootstrap"
		  depends-on="documents.dictionaries.LogicEcmModelsBootstrap,
		  regNumbers.regNumbersTemplatesDicBootstrap,
		  ru.it.lecm.business-journal.business-journal-repo.businessJournalDictionaryBootstrap,
		  ru.it.lecm.notifications.notifications-repo.notificationsTemplatesBootstrap,
		  ru.it.lecm.orgstructure.orgstructure-repo.orgBootstrap">
		<property name="dictionaries">
			<list>
				<value>alfresco/module/${artifactId}/dictionaries/lecm-protocol-doc-types.xml</value>
				<value>alfresco/module/${artifactId}/dictionaries/lecm-protocol-point-status.xml</value>
				<value>alfresco/module/${artifactId}/dictionaries/lecm-protocol-regnumbers-items.xml</value>
				<value>alfresco/module/${artifactId}/dictionaries/lecm-protocol-event-items.xml</value>
				<value>alfresco/module/${artifactId}/dictionaries/lecm-protocol-bj-items.xml</value>
				<value>alfresco/module/${artifactId}/dictionaries/lecm-meetings-nt-items.xml</value>
			</list>
		</property>
	</bean>

	<util:constant id="MEETINGS_ROOT_ID" static-field="ru.it.lecm.meetings.beans.MeetingsService.MEETINGS_ROOT_ID"/>

	<util:list id="meetingsPropsForFilterShowInCalendar">
		<value>lecm-meetings:chairman-assoc</value>
		<value>lecm-meetings:secretary-assoc</value>
	</util:list>
	
	<bean id="meetingsService" class="ru.it.lecm.meetings.beans.MeetingsServiceImpl" parent="baseBean"
		  depends-on="meetings.ModelsBootstrap, ServiceRegistry, nodeService, transactionService, businessJournalService, WorkflowService, personService, stateMachineHelper"
		  init-method="init"
		  p:workflowService-ref="WorkflowService"
		  p:personService-ref="personService"
		  p:stateMachineService-ref="stateMachineHelper"
		  p:businessJournalService-ref="businessJournalService"
		  p:documentTableService-ref="documentTableService"
		  p:documentService-ref="documentService"
		  p:documentConnectionService-ref="documentConnectionService"
		  p:eventsService-ref="eventsService"
		  p:siteService-ref="siteService"
		  p:authorityService-ref="authorityService"
		  p:orgstructureService-ref="serviceOrgstructure"
		  p:notificationsService-ref="notificationsService"
		  p:routesService-ref="routesService"
		  p:meetingsPropsForFilterShowInCalendar-ref="meetingsPropsForFilterShowInCalendar"
	>
		<!-- Автоматическое создание каталогов. -->
		<property name="folders">
			<map>
				<entry key="#{MEETINGS_ROOT_ID}" value="Сервис Совещания"/>
			</map>
		</property>
	</bean>

	<bean id="meetingsScript" parent="baseScript" class="ru.it.lecm.meetings.scripts.MeetingsWebScriptBean"
		  depends-on="nodeService, meetingsService"
		  p:nodeService-ref="nodeService"
		  p:meetingsService-ref="meetingsService"
		  p:extensionName="meetings"
	/>

	<bean id="meetingsPolicy" class="ru.it.lecm.meetings.policy.MeetingsPolicy" parent="baseBean"
		  init-method="init"
		  depends-on="documents.LogicEcmModelsBootstrap,
				meetings.ModelsBootstrap,
				meetingsService,
				documentTableService,
				policyComponent"
		  p:documentTableService-ref="documentTableService"
		  p:documentAttachmentsService-ref="documentAttachmentsService"
		  p:policyComponent-ref="policyComponent"
		  p:lecmPermissionService-ref="lecmPermissionServiceBean"
		  p:behaviourFilter-ref="policyBehaviourFilter"
		  p:documentMembersService-ref="documentMembersService"
		  p:meetingsService-ref="meetingsService"
		  p:stateMachineService-ref="lifecycleStateMachineHelper"
	/>

	<bean id="protocolPolicy" class="ru.it.lecm.meetings.policy.ProtocolPolicy" parent="baseBean"
		  init-method="init"
		  depends-on="documents.LogicEcmModelsBootstrap,
				protocolService,
				documentTableService,
				policyComponent"
		  p:documentTableService-ref="documentTableService"
		  p:policyComponent-ref="policyComponent"
		  p:behaviourFilter-ref="policyBehaviourFilter"

	/>

    <bean id="protocol.defaultStatemachine" parent="defaultStatemachines">
        <property name="statemachineName" value="lecm-protocol:document" />
        <property name="path" value="alfresco/module/${artifactId}/statemachine/lecm-protocol-statemachine-default.xml" />
    </bean>
    <!--Автоматическое развертывание машин состояний -->
    <bean id="protocol.defaultStatemachine.bootstrap" parent="defaultStatemachineBootstrap">
        <property name="defaultStateMachines" ref="protocol.defaultStatemachine" />
        <property name="stateMachineName" value="lecm-protocol:document"/>
    </bean>

    <bean id="meetings.defaultStatemachine" parent="defaultStatemachines">
        <property name="statemachineName" value="lecm-meetings:document" />
        <property name="path" value="alfresco/module/${artifactId}/statemachine/lecm-meetings-statemachine-default.xml" />
    </bean>
    <!-- Автоматическое развертывание машин состояний -->
    <bean id="meetings.defaultStatemachine.bootstrap" parent="defaultStatemachineBootstrap">
        <property name="defaultStateMachines" ref="meetings.defaultStatemachine" />
        <property name="stateMachineName" value="lecm-meetings:document"/>
    </bean>

	<util:list id="protocol.taggedCounterRegistrator.tags">
		<value>project</value>
	</util:list>
	<bean id="protocol.taggedCounterRegistrator"
		  parent="regNumbersTaggedCounterRegistrator"
		  p:documentType="lecm-protocol:document"
		  p:tags-ref="protocol.taggedCounterRegistrator.tags"/>

	<bean id="protocolService" class="ru.it.lecm.meetings.beans.ProtocolServiceImpl" parent="baseBean"
		  depends-on="protocol.ModelsBootstrap,
                      ServiceRegistry, nodeService, transactionService"
		  p:lecmDictionaryService-ref="serviceDictionary"
		  p:documentService-ref="documentService"
		  p:namespaceService-ref="namespaceService"
		  p:documentEventService-ref="documentEventService"
		  p:lecmPermissionService-ref="lecmPermissionServiceBean"
		  p:orgstructureService-ref="serviceOrgstructure"
		  p:documentMembersService-ref="documentMembersService"
	/>

	<bean id="protocolScript" parent="baseScript" class="ru.it.lecm.meetings.scripts.ProtocolWebScriptBean"
		  depends-on="nodeService, protocolService"
		  p:nodeService-ref="nodeService"
		  p:protocolService-ref="protocolService"
		  p:documentService-ref="documentService"
		  p:lecmPermissionService-ref="lecmPermissionServiceBean"
		  p:documentEventService-ref="documentEventService"
		  p:documentConnectionService-ref="documentConnectionService"
		  p:businessJournalService-ref="businessJournalService"
		  p:protocolReportsService-ref="protocolReportsService"
		  p:extensionName="protocolService"
		  p:errandsService-ref="errandsService"
	/>

	<bean id="protocolReportsService" parent="baseBean"
		  class="ru.it.lecm.meetings.beans.ProtocolReportsServiceImpl"
		  p:reportsManager-ref="reportsManager"
		  p:protocolService-ref="protocolService"
	/>

	<bean parent="lecmDictionaryBootstrap" depends-on="groupActionsService">
		<property name="rootPath" value="/Business platform/LECM/Сервис Групповые операции"/>
		<property name="dictionaries">
			<list>
				<value>alfresco/module/${artifactId}/actions/create-protocol-content.xml</value>
				<value>alfresco/module/${artifactId}/actions/holding-meeting.xml</value>
				<value>alfresco/module/${artifactId}/actions/create-protocol.xml</value>
				<value>alfresco/module/${artifactId}/actions/approve-time.xml</value>
				<value>alfresco/module/${artifactId}/actions/change-secretary.xml</value>
				<value>alfresco/module/${artifactId}/actions/force-approval.xml</value>
				<value>alfresco/module/${artifactId}/actions/reject-approval.xml</value>
			</list>
		</property>
	</bean>


	<bean id="protocol.reports.LogicEcmBootstrap" parent="lecmDictionaryBootstrap"
          depends-on="reportsEditorService,reportsEditor.LogicEcmDictionariesBootstrap,
          reportsEditorOnCreateAssocsPolicy,reportsEditorTemplatePolicy,
          dataSourcePolicy,reportDescriptorPolicy">
        <property name="rootPath" value="/Business platform/LECM/Сервис Редактор Отчетов/Отчеты"/>
        <property name="dictionaries">
            <list>
                <value>alfresco/module/${artifactId}/reports/protocol-content.xml</value>
            </list>
        </property>
        <property name="xmlImportListener" ref="protocol.reportsDeployer"/>
    </bean>

    <bean id="protocol.reportsDeployer" parent="reportsDeployer">
        <property name="reportsForDeploy">
            <list>
                <value>protocol-content</value>
            </list>
        </property>
    </bean>

	<util:list id="meetings.copySettings.propsToCopy">
		<value>lecm-events:title</value>
		<value>lecm-events:description</value>
	</util:list>

	<util:list id="meetings.copySettings.assocsToCopy">
		<value>lecm-events:location-assoc</value>
		<value>lecm-meetings:chairman-assoc</value>
		<value>lecm-events:initiator-assoc</value>
		<value>lecm-meetings:secretary-assoc</value>
		<value>lecm-events:temp-members-assoc</value>
		<value>lecm-events:invited-members-assoc</value>
		<value>lecm-events:temp-resources-assoc</value>
		<value>lecm-events:subject-assoc</value>
	</util:list>

	<bean id="meetings.copySettings" class="ru.it.lecm.documents.beans.DocumentCopySettings"
		  p:baseURL="event-create"
		  p:propsToCopy-ref="meetings.copySettings.propsToCopy"
		  p:assocsToCopy-ref="meetings.copySettings.assocsToCopy" />

	<util:map id="meetings.copySettings.bean.settings">
		<entry key="lecm-meetings:document" value-ref="meetings.copySettings"/>
	</util:map>

	<bean id="meetings.copySettings.bean" parent="documentCopySettingsBean"
		  p:settings-ref="meetings.copySettings.bean.settings" />

	<bean parent="lecmMessagesLoader">
		<property name="messages">
			<list>
				<value>alfresco/module/${artifactId}/messages/lecm-meetings-document</value>
				<value>alfresco/module/${artifactId}/messages/lecm-protocol-document</value>
			</list>
		</property>
	</bean>

	<bean id="protocol.ConfigToRepositoryLoader" parent="configsToRepositoryLoader">
		<property name="configs">
			<list>
				<value>alfresco/module/meetings-repo/reports/configs/protocol.properties</value>
			</list>
		</property>
	</bean>

	<util:list id="protocolSchedulingRecipients" value-type="org.alfresco.service.namespace.QName">
		<util:constant static-field="ru.it.lecm.documents.beans.DocumentService.ASSOC_REG_DATA_DOC_REGISTRATOR"/>
	</util:list>
	<bean id="protocolEveryDayStatusExecutor" class="ru.it.lecm.eds.schedule.EveryDayStatusExecutor" parent="action-executer">
		<property name="ignoreLock" value="false"/>
		<property name="notificationsService" ref="notificationsService"/>
		<property name="nodeService" ref="nodeService"/>
		<property name="publicAction" value="false" />
		<property name="recipientsQNames" ref="protocolSchedulingRecipients"/>
	</bean>
	<bean id="protocolEveryDayStatusSchedule" class="ru.it.lecm.eds.schedule.EveryDayStatusShedule" parent="baseTransactionalSchedule">
		<constructor-arg>
			<util:constant static-field="ru.it.lecm.meetings.beans.ProtocolService.TYPE_PROTOCOL"/>
		</constructor-arg>
        <property name="statuses" value="${lecm.protocol.scheduling.expired.statuses}"/>
        <property name="cronExpression" value="${lecm.protocol.scheduling.expired.cronExpression}"/>
		<property name="jobName">
			<value>protocol-sys-agent-expired</value>
		</property>
		<property name="jobGroup">
			<value>protocol-expired</value>
		</property>
		<property name="triggerName">
			<value>protocol-sys-agent-expired-trigger</value>
		</property>
		<property name="triggerGroup">
			<value>protocol-expired-trigger</value>
		</property>
		<property name="actionName">
			<value>protocolEveryDayStatusExecutor</value>
		</property>
		<property name="namespaceService" ref="namespaceService"/>
		<property name="documentService" ref="documentService"/>
	</bean>

	<bean id="meetingsReassignAttributesImporter" class="ru.it.lecm.duties.reassign.importers.DocTypeAttrsImporter" parent="baseDocumentAttributesImporter"
		  depends-on="meetings.dictionaries.modelsBootstrap">
		<property name="documentType" value="lecm-meetings:document"/>
		<property name="attributes">
			<map>
				<entry key="lecm-meetings:chairman-assoc">
					<list>
						<value>Новое</value>
						<value>Согласование повестки</value>
						<value>Утверждено</value>
					</list>
				</entry>
				<entry key="lecm-meetings:secretary-assoc">
					<list>
						<value>Новое</value>
						<value>Согласование повестки</value>
						<value>Утверждено</value>
					</list>
				</entry>
				<entry key="lecm-events:temp-members-assoc">
					<list>
						<value>Новое</value>
						<value>Согласование повестки</value>
						<value>Утверждено</value>
					</list>
				</entry>
			</map>
		</property>
	</bean>
</beans>
