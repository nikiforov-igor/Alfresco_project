<?xml version='1.0' encoding='UTF-8'?>
<items updateMode="RewriteChildren">
    <item name="cm:Отчет о ходе исполнения резолюции за период" type="lecm-rpeditor:reportDescriptor">
        <property name="lecm-rpeditor:reportQueryLimit"><![CDATA[-1]]></property>
        <property name="lecm-rpeditor:reportQuery"><![CDATA[]]></property>
        <property name="lecm-rpeditor:reportQueryOffset"><![CDATA[0]]></property>
        <property name="cm:name"><![CDATA[Отчет о ходе исполнения резолюции за период]]></property>
        <property name="lecm-rpeditor:runAsSystem"><![CDATA[false]]></property>
        <property name="lecm-rpeditor:includeAllOrganizations"><![CDATA[false]]></property>
        <property name="lecm-rpeditor:reportQuerySort"><![CDATA[]]></property>
        <property name="lecm-rpeditor:reportQueryPgSize"><![CDATA[-1]]></property>
        <property name="lecm-rpeditor:loadColumnsFromSQL"><![CDATA[false]]></property>
        <property name="lecm-rpeditor:reportDocType"><![CDATA[lecm-resolutions:document]]></property>
        <property name="lecm-rpeditor:reportCode"><![CDATA[execute-resolution]]></property>
        <property name="lecm-rpeditor:reportObjectsMultiplicity"><![CDATA[true]]></property>
        <items>
            <item name="cm:1d377ee5-e35d-4508-9c89-585c5e0b7ce6" type="lecm-rpeditor:reportDataSource">
                <property name="cm:name"><![CDATA[7a1f47c2-aa82-4f98-893c-1272ce159194]]></property>
                <items>
                    <item name="cm:Выводить резолюции" type="lecm-rpeditor:reportDataColumn">
                        <property name="lecm-rpeditor:dataColumnControlParams"><![CDATA[]]></property>
                        <property name="lecm-rpeditor:dataColumnClass"><![CDATA[d:int]]></property>
                        <property name="lecm-rpeditor:dataColumnExpression">
                            <![CDATA[0|Все,1|Контрольные,2|Неконтрольные]]></property>
                        <property name="cm:name"><![CDATA[Выводить резолюции]]></property>
                        <property name="lecm-rpeditor:dataColumnOrder"><![CDATA[20]]></property>
                        <property name="lecm-rpeditor:dataColumnCode"><![CDATA[document_onControl]]></property>
                        <property name="lecm-rpeditor:dataColumnMandatory"><![CDATA[false]]></property>
                        <assocs>
                            <assoc type="lecm-rpeditor:columnTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип столбцов/String"/>
                            <assoc type="lecm-rpeditor:columnParameterTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип параметра/Значение"/>
                        </assocs>
                    </item>
                    <item name="cm:Дата выдачи" type="lecm-rpeditor:reportDataColumn">
                        <property name="lecm-rpeditor:dataColumnControlParams">
                            <![CDATA[fillDates=true;fromDateDefault=START_YEAR;toDateDefault=NOW]]></property>
                        <property name="lecm-rpeditor:dataColumnClass"><![CDATA[d:date]]></property>
                        <property name="lecm-rpeditor:dataColumnExpression"><![CDATA[]]></property>
                        <property name="cm:name"><![CDATA[Дата выдачи]]></property>
                        <property name="lecm-rpeditor:dataColumnOrder"><![CDATA[30]]></property>
                        <property name="lecm-rpeditor:dataColumnCode"><![CDATA[document_IssueDate]]></property>
                        <property name="lecm-rpeditor:dataColumnMandatory"><![CDATA[false]]></property>
                        <assocs>
                            <assoc type="lecm-rpeditor:columnTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип столбцов/Date"/>
                            <assoc type="lecm-rpeditor:columnParameterTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип параметра/Диапазон"/>
                        </assocs>
                    </item>
                    <item name="cm:Автор" type="lecm-rpeditor:reportDataColumn">
                        <property name="lecm-rpeditor:dataColumnControlParams"><![CDATA[]]></property>
                        <property name="lecm-rpeditor:dataColumnClass"><![CDATA[lecm-orgstr:employee]]></property>
                        <property name="lecm-rpeditor:dataColumnExpression"><![CDATA[]]></property>
                        <property name="cm:name"><![CDATA[Автор]]></property>
                        <property name="lecm-rpeditor:dataColumnOrder"><![CDATA[40]]></property>
                        <property name="lecm-rpeditor:dataColumnCode"><![CDATA[document_author]]></property>
                        <property name="lecm-rpeditor:dataColumnMandatory"><![CDATA[false]]></property>
                        <assocs>
                            <assoc type="lecm-rpeditor:columnTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип столбцов/String"/>
                            <assoc type="lecm-rpeditor:columnParameterTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип параметра/Список"/>
                        </assocs>
                    </item>
                    <item name="cm:Тип документа-основания" type="lecm-rpeditor:reportDataColumn">
                        <property name="lecm-rpeditor:dataColumnControlParams"><![CDATA[]]></property>
                        <property name="lecm-rpeditor:dataColumnClass"><![CDATA[d:text]]></property>
                        <property name="lecm-rpeditor:dataColumnExpression">
                            <![CDATA[1|Все,Входящий документ|Входящие,Внутренний документ|Внутренние,Протокол|Протоколы,ОРД|ОРД,Поручение|Поручения,0|Без документа основания]]></property>
                        <property name="cm:name"><![CDATA[Тип документа-основания]]></property>
                        <property name="lecm-rpeditor:dataColumnOrder"><![CDATA[50]]></property>
                        <property name="lecm-rpeditor:dataColumnCode"><![CDATA[document_baseDocType]]></property>
                        <property name="lecm-rpeditor:dataColumnMandatory"><![CDATA[false]]></property>
                        <assocs>
                            <assoc type="lecm-rpeditor:columnTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип столбцов/String"/>
                            <assoc type="lecm-rpeditor:columnParameterTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип параметра/Список"/>
                        </assocs>
                    </item>
                    <item name="cm:Выводить отчет в формате" type="lecm-rpeditor:reportDataColumn">
                        <property name="lecm-rpeditor:dataColumnControlParams"><![CDATA[]]></property>
                        <property name="lecm-rpeditor:dataColumnClass"><![CDATA[d:text]]></property>
                        <property name="lecm-rpeditor:dataColumnExpression"><![CDATA[PDF,DOC,XLS]]></property>
                        <property name="cm:name"><![CDATA[Выводить отчет в формате]]></property>
                        <property name="lecm-rpeditor:dataColumnOrder"><![CDATA[60]]></property>
                        <property name="lecm-rpeditor:dataColumnCode"><![CDATA[targetFormat]]></property>
                        <property name="lecm-rpeditor:dataColumnMandatory"><![CDATA[false]]></property>
                        <assocs>
                            <assoc type="lecm-rpeditor:columnTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип столбцов/String"/>
                            <assoc type="lecm-rpeditor:columnParameterTypeAssoc"
                                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип параметра/Значение"/>
                        </assocs>
                    </item>
                </items>
            </item>
            <item name="cm:execute_resolutions" type="lecm-rpeditor:reportTemplate">
                <property name="lecm-rpeditor:templateCode"><![CDATA[tmpl]]></property>
                <property name="cm:name"><![CDATA[execute_resolutions]]></property>
                <assocs>
                    <assoc type="lecm-rpeditor:reportTemplateType"
                           path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип отчета/Jasper"/>
                    <assoc type="lecm-rpeditor:reportTemplateFile"
                           path="/Business platform/LECM/Сервис Редактор Отчетов/Отчеты/Отчет о ходе исполнения резолюции за период/execute-resolution_tmpl.jrxml"/>
                </assocs>
            </item>
            <item name="cm:execute-resolution_tmpl.jrxml" type="cm:content">
                <property name="cm:name"><![CDATA[execute-resolution_tmpl.jrxml]]></property>
                <property name="cm:content">
                    <![CDATA[]]></property>
            </item>
        </items>
        <assocs>
            <assoc type="lecm-rpeditor:reportProviderAssoc"
                   path="/Business platform/LECM/Сервис Редактор Отчетов/Справочники/Тип провайдера/Reporting SQLProvider"/>
            <assoc type="lecm-rpeditor:reportTemplateAssoc"
                   path="/Business platform/LECM/Сервис Редактор Отчетов/Отчеты/Отчет о ходе исполнения резолюции за период/execute_resolutions"/>
        </assocs>
    </item>
</items>