<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.it.ru/logicECM/workflow/signing">
  <process id="lecmSigningWorkflow" name="Подписание" isExecutable="true">
    <extensionElements>
      <activiti:executionListener event="end" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
        <activiti:field name="script">
          <activiti:string><![CDATA[(function(){ /* process happy end */
  var isEnded = execution.isEnded();
  var deleteReason = (execution.getDeleteReason() != null) ? '' + execution.getDeleteReason() : null;
  var document;
  if (isEnded || deleteReason) {
    document = bpm_package.children[0];
    statemachine.disconnectFromStatemachine(document, 'activiti$' + execution.getProcessInstanceId());
  }
})();]]></activiti:string>
        </activiti:field>
        <activiti:field name="runAs">
          <activiti:string><![CDATA[workflow]]></activiti:string>
        </activiti:field>
      </activiti:executionListener>
    </extensionElements>
    <startEvent id="startevent1" name="Start" activiti:formKey="lecmSign2:startTask"></startEvent>
    <serviceTask id="alfrescoScripttask1" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
      <extensionElements>
        <activiti:field name="runAs">
          <activiti:string><![CDATA[workflow]]></activiti:string>
        </activiti:field>
        <activiti:field name="script">
          <activiti:string><![CDATA[(function() { /* старт БП подготовка переменных */
  var document = bpm_package.children[0];
  var currentEmployee = orgstructure.getCurrentEmployee();
  var signerEmployee = document.assocs['lecmSignAspects:signerEmployeeAssoc'][0];
  execution.setVariableLocal('initiatorEmployee', base.getWorkflowNodeConverter().convertNode(currentEmployee.nodeRef));
  execution.setVariableLocal('signerEmployee', base.getWorkflowNodeConverter().convertNode(signerEmployee.nodeRef));
  /* привязывание процесса к машине состояний документа */
  statemachine.connectToStatemachine(document, 'activiti$' + execution.getProcessInstanceId(), 'activiti$' + execution.getProcessDefinition().getKey());
})();]]></activiti:string>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow1" sourceRef="startevent1" targetRef="alfrescoScripttask1"></sequenceFlow>
    <userTask id="usertask1" name="User Task" activiti:formKey="lecmSign2:signTask">
      <extensionElements>
        <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[(function() { /* create */
  var document = bpm_package.children[0];
  var signerEmployee = execution.getVariableLocal('signerEmployee');
  var effectiveEmployee = delegation.getEffectiveEmployee(signerEmployee, 'LECM_SIGNER_DYN');
  task.setVariableLocal('originalEmployee', base.getWorkflowNodeConverter().convertNode(signerEmployee.nodeRef));
  task.setVariableLocal('effectiveEmployee', base.getWorkflowNodeConverter().convertNode(effectiveEmployee.nodeRef));
  userName = orgstructure.getEmployeeLogin(effectiveEmployee);

  task.setAssignee(userName);
})();]]></activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="assignment" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[(function() { /* assign */
  var assignee = '' + task.getAssignee();
  var previousAssignee = '' + task.getVariableLocal('previousAssignee');
  var document, documentLink, msg, employee;
  if (previousAssignee != assignee) {
    task.setVariableLocal('previousAssignee', assignee);
    document = bpm_package.children[0];
    documentLink = documentScript.wrapperDocumentLink(document, '{lecm-document:ext-present-string}');
    msg = documentLink + ' направлен Вам на подписание.';
    employee = orgstructure.getEmployeeByLogin(assignee);
    task.setVariableLocal('effectiveEmployee', base.getWorkflowNodeConverter().convertNode(employee.nodeRef));
    /* добавляем актуального исполнителя в динамическую бизнес роль из переменной workflowDynRole */
    lecmPermission.grantDynamicRole(document, employee, 'LECM_SIGNER_DYN', 'LECM_BASIC_PG_Reviewer');
    /* уведомление актуальному исполнителю */
    notifications.sendNotification([employee.nodeRef.toString()], msg, document);
  }
})();]]></activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string><![CDATA[(function() { /* complete */
  var document = bpm_package.children[0];
  var decision = task.getVariableLocal('lecmSign2_decision');
  var comment = task.getVariableLocal('bpm_comment');
  var effectiveEmployee = task.getVariableLocal('effectiveEmployee');
  execution.setVariableLocal('employeeDecision', decision);
  execution.setVariableLocal('employeeComment', comment);
  execution.setVariableLocal('effectiveEmployee', effectiveEmployee);
  /* отбираем ранее нарезанные права */
  /* lecmPermission.revokeDynamicRole(document, employee, 'LECM_SIGNER_DYN'); */
  /* добавляем в участники как читателя */
  documentMembers.addMemberWithoutCheckPermission(document, employee, 'LECM_BASIC_PG_Reader', true);
})();]]></activiti:string>
          </activiti:field>
        </activiti:taskListener>
      </extensionElements>
    </userTask>
    <sequenceFlow id="flow2" sourceRef="alfrescoScripttask1" targetRef="usertask1"></sequenceFlow>
    <serviceTask id="alfrescoScripttask2" name="Alfresco Script Task" activiti:async="true" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
      <extensionElements>
        <activiti:field name="script">
          <activiti:string><![CDATA[(function() { /* запись в БЖ, рассылка уведомлений, запись результата в документ */
  var document = bpm_package.children[0];
  var documentLink = documentScript.wrapperDocumentLink(document, '{lecm-document:ext-present-string}');
  var initiator = execution.getVariable('initiatorEmployee');
  var signerEmployee = execution.getVariableLocal('signerEmployee');
  var effectiveEmployee = execution.getVariableLocal('effectiveEmployee');
  var employeeName = effectiveEmployee.properties['lecm-orgstr:employee-short-name'];
  var decision = '' + execution.getVariableLocal('employeeDecision');
  var comment = (execution.getVariableLocal('employeeDecision') != null) ? '' + execution.getVariableLocal('employeeDecision') : null;
  var isSigned = 'SIGNED' == decision;
  var msg, bjMsg;
  if (isSigned) {
    msg = 'Сотрудник ' + employeeName + ' подписал документ ' + documentLink;
    bjMsg = 'Сотрудник #object1 подписал документ #mainobject';

    document.properties['lecmSignAspects:isSigned'] = true;
    document.properties['lecmSignAspects:signingDate'] = base.getValueConverter().convertValueForJava(new Date());
    document.save();
    document.removeAssociation(signerEmployee, 'lecmSignAspects:signerEmployeeAssoc');
    document.createAssociation(effectiveEmployee, 'lecmSignAspects:signerEmployeeAssoc');
  } else {
    /* logText += documentScript.wrapperTitle("изменение срока", lecmErrandWf_requestDueDateChangeReason); */
    msg = 'Сотрудник ' + employeeName + ' отклонил подписание документа ' +  + documentLink;
    bjMsg = 'Сотрудник #object1 отклонил подписание документа #mainobject';
  }
  notifications.sendNotification([initiator.nodeRef.toString()], msg, document);
  businessJournal.log(document.nodeRef.toString(), 'SIGNING', bjMsg, [effectiveEmployee.nodeRef.toString()]);
})();]]></activiti:string>
        </activiti:field>
        <activiti:field name="runAs">
          <activiti:string><![CDATA[workflow]]></activiti:string>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow3" sourceRef="usertask1" targetRef="alfrescoScripttask2"></sequenceFlow>
    <endEvent id="endevent1" name="End"></endEvent>
    <sequenceFlow id="flow4" sourceRef="alfrescoScripttask2" targetRef="endevent1"></sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_lecmSigningWorkflow">
    <bpmndi:BPMNPlane bpmnElement="lecmSigningWorkflow" id="BPMNPlane_lecmSigningWorkflow">
      <bpmndi:BPMNShape bpmnElement="startevent1" id="BPMNShape_startevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="40.0" y="260.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask1" id="BPMNShape_alfrescoScripttask1">
        <omgdc:Bounds height="55.0" width="105.0" x="120.0" y="250.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask1" id="BPMNShape_usertask1">
        <omgdc:Bounds height="55.0" width="105.0" x="300.0" y="250.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask2" id="BPMNShape_alfrescoScripttask2">
        <omgdc:Bounds height="55.0" width="105.0" x="480.0" y="250.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent1" id="BPMNShape_endevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="660.0" y="260.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="flow1" id="BPMNEdge_flow1">
        <omgdi:waypoint x="75.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="120.0" y="277.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow2" id="BPMNEdge_flow2">
        <omgdi:waypoint x="225.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="300.0" y="277.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow3" id="BPMNEdge_flow3">
        <omgdi:waypoint x="405.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="480.0" y="277.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow4" id="BPMNEdge_flow4">
        <omgdi:waypoint x="585.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="660.0" y="277.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>