<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/errands/workflow/cancel/1.0">
    <process id="errandsCancel" name="Отменить поручение">
        <startEvent id="startCancel" name="Start" activiti:formKey="lecmErrandWf:cancel"></startEvent>
        <endEvent id="endCancel" name="End"></endEvent>
        <scriptTask id="cancelErrand" name="Errand cancel" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string>
                            <![CDATA[
                            var cancelReason = "" + lecmErrandWf_cancelReason;
                            var comment = (cancelReason && cancelReason != "null") ? cancelReason : "Комментариев нет";
                            var document = bpm_package.children[0];
                            if (document != null) {
                                var msg = Packages.ru.it.lecm.base.beans.BaseBean.getMessage;
                                var logText = msg('ru.it.lecm.errands.bjMessages.cancelErrand.message', "Сотрудник #initiator  {cancel} поручение: #mainobject.");
                                logText = logText.replace("{cancel}", base.wrapperTitle(msg('ru.it.lecm.errands.bjMessages.cancelErrand.cancelParamText', "отменил"), comment));
                                businessJournal.log(document.nodeRef.toString(), "CANCEL_ERRAND", logText, []);

                                var initiator = null;
                                var initiatorAssoc = document.assocs["lecm-errands:initiator-assoc"];
                                if (initiatorAssoc && initiatorAssoc.length) {
                                    initiator = initiatorAssoc[0];
                                }

                                var executorAssoc = document.assocs["lecm-errands:executor-assoc"];
                                if (executorAssoc && executorAssoc.length && initiator) {
                                    var countChildErrands = 0;
                                    var connectedDocuments = errands.getChildErrands(document.nodeRef.toString());
                                    if (connectedDocuments && connectedDocuments.length) {
                                        countChildErrands = connectedDocuments.length;
                                    }
                                    var documentRefLink = document.nodeRef.toString().replace("://", "/");
                                    query = "!Отменено, !Удалено, !Исполнено, !Не исполнено")
                                    var msg = org.springframework.extensions.surf.util.I18NUtil.getMessage;
                                    if (msg("lecm.errands.statemachine-status.removed") && msg("lecm.errands.statemachine-status.removed") != "Удалено") {
                                        query += ", !" + msg("lecm.errands.statemachine-status.removed");
                                    }
                                    if (msg("lecm.errands.statemachine-status.executed") && msg("lecm.errands.statemachine-status.executed") != "Исполнено") {
                                        query += ", !" + msg("lecm.errands.statemachine-status.executed");
                                    }
                                    if (msg("lecm.errands.statemachine-status.not-executed") && msg("lecm.errands.statemachine-status.not-executed") != "Исполнено") {
                                        query += ", !" + msg("lecm.errands.statemachine-status.not-executed");
                                    }
                                    if (msg("lecm.errands.statemachine-status.cancelled") && msg("lecm.errands.statemachine-status.cancelled") != "Отменено") {
                                        query += ", !" + msg("lecm.errands.statemachine-status.cancelled");
                                    }
                                    var url = "/" + base.getShareContext() + "/page/errands-list?query=" + encodeURIComponent(query);
                                    url += "&formId=" + encodeURIComponent("Все");
                                    url += "#filter=errandsChildFilter|" + documentRefLink;

                                    notifications.sendNotificationFromCurrentUser({
                                        recipients: executorAssoc,
                                        templateCode: 'ERRANDS_CANCEL',
                                        templateConfig: {
                                            mainObject: document,
                                            eventExecutor: initiator,
                                            comment: comment,
                                            link_url: url,
                                            link_title: countChildErrands
                                        }
                                    });
                                }
                            }
                            ]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script>var test=1;</script>
        </scriptTask>
        <receiveTask id="errandReceiveTask" name="Receive Task"></receiveTask>
        <sequenceFlow id="flow1" name="" sourceRef="startCancel" targetRef="cancelErrand"></sequenceFlow>
        <sequenceFlow id="flow2" name="" sourceRef="cancelErrand" targetRef="errandReceiveTask"></sequenceFlow>
        <sequenceFlow id="flow3" name="" sourceRef="errandReceiveTask" targetRef="endCancel"></sequenceFlow>
    </process>
</definitions>
