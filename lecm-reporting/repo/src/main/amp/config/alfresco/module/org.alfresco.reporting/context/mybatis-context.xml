<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>
<beans> 

	<!--  reportingAlfresco is the dataSource to the Alfresco database -->
	<!--  reporting is the dataSource to the BusinessReporting database -->
	
	<!--  MyBatis  config  -->

	<bean id="alfrescoDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.driver}" /> 
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<bean id="reportingAlfresco_SqlSessionFactory" class="org.alfresco.ibatis.HierarchicalSqlSessionFactoryBean">
		<property name="useLocalCaches" value="${mybatis.useLocalCaches}"/> 
		<property name="resourceLoader" ref="dialectResourceLoader"/>
		<property name="dataSource" ref="alfrescoDataSource"/>
		<property name="configLocation">		<!--  #resource.dialect# -->
			<value>classpath:alfresco/module/org.alfresco.reporting/mybatis/sqlAlfrescoMapConfig.xml</value>
		</property>
	</bean>
 
	
	<!--  MyBatis-Spring  sqlSessionTemplate  -->
	<bean id="reportingAlfresco_SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="reportingAlfresco_SqlSessionFactory"/>
	</bean> 
	    
	<bean id="workflowDAO" class="org.alfresco.reporting.mybatis.impl.WorkflowDAOImpl">
		<property name="workflowTemplate" ref= "reportingAlfresco_SqlSessionTemplate" />
		
	</bean>
	

    <bean id="reportingDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${reporting.db.driver}" />
        <property name="url" value="${reporting.db.url}" />
        <property name="username" value="${reporting.db.username}" />
        <property name="password" value="${reporting.db.password}" />

        <property name="initialSize" >
            <value>${reporting.db.pool.initial}</value>
        </property>
        <property name="maxActive" >
            <value>${reporting.db.pool.max}</value>
        </property>
        <property name="minIdle" >
            <value>${reporting.db.pool.min}</value>
        </property>
        <property name="maxIdle" >
            <value>${reporting.db.pool.idle}</value>
        </property>
        <property name="defaultAutoCommit" >
            <value>false</value>
        </property>
        <property name="defaultTransactionIsolation" >
            <value>${reporting.db.txn.isolation}</value>
        </property>
        <property name="maxWait" >
            <value>${reporting.db.pool.wait.max}</value>
        </property>
        <property name="validationQuery" >
            <value>${reporting.db.pool.validate.query}</value>
        </property>
        <property name="timeBetweenEvictionRunsMillis" >
            <value>${reporting.db.pool.evict.interval}</value>
        </property>
        <property name="minEvictableIdleTimeMillis" >
            <value>${reporting.db.pool.evict.idle.min}</value>
        </property>
        <property name="testOnBorrow" >
            <value>${reporting.db.pool.validate.borrow}</value>
        </property>
        <property name="testOnReturn" >
            <value>${reporting.db.pool.validate.return}</value>
        </property>
        <property name="testWhileIdle" >
            <value>${reporting.db.pool.evict.validate}</value>
        </property>
        <property name="removeAbandoned" >
            <value>${reporting.db.pool.abandoned.detect}</value>
        </property>
        <property name="removeAbandonedTimeout" >
            <value>${reporting.db.pool.abandoned.time}</value>
        </property>
        <property name="poolPreparedStatements" >
            <value>${reporting.db.pool.statements.enable}</value>
        </property>
        <property name="maxOpenPreparedStatements" >
            <value>${reporting.db.pool.statements.max}</value>
        </property>
        <property name="logAbandoned" >
            <value>${reporting.db.pool.abandoned.log}</value>
        </property>
    </bean>
	
		<!--  MyBatis  config  -->
		
	<bean id="reportingDialectResourceLoader" class="org.alfresco.reporting.util.resource.HierarchicalResourceLoader">
		<property name="dialectBaseClass">
            <value>org.hibernate.dialect.Dialect</value>
        </property>
        <!--  Resolve the (perhaps auto detected) dialect class -->
        <property name="datasource">
        	<ref bean="reportingDataSource"/>
        </property>
        <property name="mySqlClassName" value="org.hibernate.dialect.MySQLInnoDBDialect"/>
        <property name="postgreSqlClassName" value="org.hibernate.dialect.PostgreSQLDialect"/>
        <property name="msSqlClassName" value="org.hibernate.dialect.SQLServerDialect"/>
        <property name="oracleClassName" value="org.hibernate.dialect.OracleDialect"/>
	</bean>	
	
	<bean id="reporting_SqlSessionFactory" 	class="org.alfresco.ibatis.HierarchicalSqlSessionFactoryBean">
		<property name="useLocalCaches" value="${mybatis.useLocalCaches}"/> 
		<property name="resourceLoader" ref="reportingDialectResourceLoader"/>
		<property name="dataSource" ref="reportingDataSource"/>
		<property name="configLocation">
			<value>classpath:alfresco/module/org.alfresco.reporting/mybatis/sqlReportingMapConfig.xml</value>
		</property>
	</bean>

	
	<!--  MyBatis-Spring  sqlSessionTemplate  -->
	<bean id="reporting_SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="reporting_SqlSessionFactory"/>
	</bean> 
	    
	<bean id="reportingDAO" class="org.alfresco.reporting.mybatis.impl.ReportingDAOImpl">
		<property name="reportingTemplate" ref= "reporting_SqlSessionTemplate" />
	</bean>
	
</beans>