<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/events/workflow/requestNewTime/1.0">
    <process id="eventsRequestNewTime" name="Мероприятия: Предложение другого времени">
        <startEvent id="startRequestNewTime" name="Start" activiti:formKey="lecmEventsWf:requestNewTime"></startEvent>
        <endEvent id="endRequestNewTime" name="End"></endEvent>
        <scriptTask id="requestNewTime" name="Request New Time" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            var document = bpm_package.children[0];
                            if (document != null) {
                                var memberRow = events.getCurrentEmployeeEventMemberRow(document);
                                if (memberRow != null) {
                                    memberRow.properties["lecm-events-ts:members-status"] = "REQUEST_NEW_TIME";
                                    memberRow.properties["lecm-events-ts:members-from-date"] = lecmEventsWf_requestNewTimeFromDate;
                                    memberRow.properties["lecm-events-ts:members-to-date"] = lecmEventsWf_requestNewTimeToDate;
                                    memberRow.properties["lecm-events-ts:members-all-day"] = lecmEventsWf_requestNewTimeAllDay;
                                    memberRow.save();
                                }

                                var repeatableEvents = events.getRepetableEvents(document, "ALL");
                                if (repeatableEvents != null) {
                                    for (var i = 0; i < repeatableEvents.length; i++) {
                                        memberRow = events.getCurrentEmployeeEventMemberRow(repeatableEvents[i]);
                                        if (memberRow != null) {
                                            memberRow.properties["lecm-events-ts:members-status"] = "REQUEST_NEW_TIME";
                                            memberRow.properties["lecm-events-ts:members-from-date"] = lecmEventsWf_requestNewTimeFromDate;
                                            memberRow.properties["lecm-events-ts:members-to-date"] = lecmEventsWf_requestNewTimeToDate;
                                            memberRow.properties["lecm-events-ts:members-all-day"] = lecmEventsWf_requestNewTimeAllDay;
                                            memberRow.save();
                                        }
                                    }
                                }

                                var currentEmployee = orgstructure.getCurrentEmployee();
                                var initiator = document.assocs["lecm-events:initiator-assoc"][0];
                                if (currentEmployee != null && initiator != null) {
                                    var notificationText = documentScript.wrapperLink(currentEmployee, currentEmployee.properties["lecm-orgstr:employee-short-name"]);
                                    notificationText += " предложил новое время проведения мероприятия: ";
                                    notificationText += events.wrapperEventLink(document, "{lecm-events:title}");

                                    var dateFormat = new Packages.java.text.SimpleDateFormat("dd.MM.yyyy");
                                    var timeFormat = new Packages.java.text.SimpleDateFormat("HH:mm");
                                    var date = new java.util.Date(lecmEventsWf_requestNewTimeFromDate.getTime());

                                    notificationText += " Начало: ";
                                    notificationText += dateFormat.format(date);
                                    notificationText += ", в ";
                                    notificationText += timeFormat.format(date);

                                    var recipients = [];
                                    recipients.push(initiator);
                                    notifications.sendNotificationFromCurrentUser(recipients, notificationText, document);
                                }
                            }
                        ]]></activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script></script>
        </scriptTask>
        <receiveTask id="eventsReceiveTask" name="Receive Task"></receiveTask>
        <sequenceFlow id="flow1" name="" sourceRef="startRequestNewTime" targetRef="requestNewTime"></sequenceFlow>
        <sequenceFlow id="flow2" name="" sourceRef="requestNewTime" targetRef="eventsReceiveTask"></sequenceFlow>
        <sequenceFlow id="flow3" name="" sourceRef="eventsReceiveTask" targetRef="endRequestNewTime"></sequenceFlow>
    </process>
</definitions>