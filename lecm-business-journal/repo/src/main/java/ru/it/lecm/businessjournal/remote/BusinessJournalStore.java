package ru.it.lecm.businessjournal.remote;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.8
 * 2013-12-13T09:49:44.562+04:00
 * Generated source version: 2.7.8
 * 
 */
@WebService(targetNamespace = "http://remote.businessjournal.lecm.it.ru/", name = "BusinessJournalStore")
@XmlSeeAlso({ObjectFactory.class})
public interface BusinessJournalStore {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getHistory", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetHistory")
    @WebMethod
    @ResponseWrapper(localName = "getHistoryResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetHistoryResponse")
    public java.util.List<ru.it.lecm.businessjournal.remote.BusinessJournalStoreRecord> getHistory(
        @WebParam(name = "MainObjectID", targetNamespace = "")
        java.lang.Long mainObjectID,
        @WebParam(name = "SortField", targetNamespace = "")
        ru.it.lecm.businessjournal.remote.Field sortField,
        @WebParam(name = "sortAscending", targetNamespace = "")
        boolean sortAscending,
        @WebParam(name = "IncludeSecondaryRecords", targetNamespace = "")
        boolean includeSecondaryRecords,
        @WebParam(name = "IncludeArchivedRecords", targetNamespace = "")
        boolean includeArchivedRecords
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getRecordsByParams", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecordsByParams")
    @WebMethod
    @ResponseWrapper(localName = "getRecordsByParamsResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecordsByParamsResponse")
    public java.util.List<ru.it.lecm.businessjournal.remote.BusinessJournalStoreRecord> getRecordsByParams(
        @WebParam(name = "ObjectTypes", targetNamespace = "")
        java.util.List<java.lang.Long> objectTypes,
        @WebParam(name = "BeginDate", targetNamespace = "")
        javax.xml.datatype.XMLGregorianCalendar beginDate,
        @WebParam(name = "EndDate", targetNamespace = "")
        javax.xml.datatype.XMLGregorianCalendar endDate,
        @WebParam(name = "Inititators", targetNamespace = "")
        java.util.List<java.lang.Long> inititators,
        @WebParam(name = "SkipCount", targetNamespace = "")
        java.lang.Integer skipCount,
        @WebParam(name = "MaxItems", targetNamespace = "")
        java.lang.Integer maxItems
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getRecordsCount", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecordsCount")
    @WebMethod
    @ResponseWrapper(localName = "getRecordsCountResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecordsCountResponse")
    public java.lang.Long getRecordsCount(
        @WebParam(name = "Filter", targetNamespace = "")
        ru.it.lecm.businessjournal.remote.GetRecordsCount.Filter filter,
        @WebParam(name = "AndFilter", targetNamespace = "")
        boolean andFilter,
        @WebParam(name = "includeArchived", targetNamespace = "")
        boolean includeArchived
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getRecords", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecords")
    @WebMethod
    @ResponseWrapper(localName = "getRecordsResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecordsResponse")
    public java.util.List<ru.it.lecm.businessjournal.remote.BusinessJournalStoreRecord> getRecords(
        @WebParam(name = "SortField", targetNamespace = "")
        ru.it.lecm.businessjournal.remote.Field sortField,
        @WebParam(name = "SortAscending", targetNamespace = "")
        boolean sortAscending,
        @WebParam(name = "StartIndex", targetNamespace = "")
        int startIndex,
        @WebParam(name = "MaxResults", targetNamespace = "")
        int maxResults,
        @WebParam(name = "Filter", targetNamespace = "")
        ru.it.lecm.businessjournal.remote.GetRecords.Filter filter,
        @WebParam(name = "AndFilter", targetNamespace = "")
        boolean andFilter,
        @WebParam(name = "IncludeArchived", targetNamespace = "")
        boolean includeArchived
    );

    @RequestWrapper(localName = "save", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.Save")
    @WebMethod
    @ResponseWrapper(localName = "saveResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.SaveResponse")
    public void save(
        @WebParam(name = "record", targetNamespace = "")
        ru.it.lecm.businessjournal.remote.BusinessJournalStoreRecord record
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getLastRecords", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetLastRecords")
    @WebMethod
    @ResponseWrapper(localName = "getLastRecordsResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetLastRecordsResponse")
    public java.util.List<ru.it.lecm.businessjournal.remote.BusinessJournalStoreRecord> getLastRecords(
        @WebParam(name = "MaxRecordsCount", targetNamespace = "")
        int maxRecordsCount,
        @WebParam(name = "IncludeArchived", targetNamespace = "")
        boolean includeArchived
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getRecordsAfter", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecordsAfter")
    @WebMethod
    @ResponseWrapper(localName = "getRecordsAfterResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecordsAfterResponse")
    public java.util.List<ru.it.lecm.businessjournal.remote.BusinessJournalStoreRecord> getRecordsAfter(
        @WebParam(name = "RecordID", targetNamespace = "")
        java.lang.Long recordID
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getHistoryByCategory", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetHistoryByCategory")
    @WebMethod
    @ResponseWrapper(localName = "getHistoryByCategoryResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetHistoryByCategoryResponse")
    public java.util.List<ru.it.lecm.businessjournal.remote.BusinessJournalStoreRecord> getHistoryByCategory(
        @WebParam(name = "mainObjId", targetNamespace = "")
        java.lang.Long mainObjId,
        @WebParam(name = "categoriesList", targetNamespace = "")
        java.util.List<java.lang.Long> categoriesList,
        @WebParam(name = "sortField", targetNamespace = "")
        ru.it.lecm.businessjournal.remote.Field sortField,
        @WebParam(name = "sortAscending", targetNamespace = "")
        boolean sortAscending
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getRecordsByInterval", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecordsByInterval")
    @WebMethod
    @ResponseWrapper(localName = "getRecordsByIntervalResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetRecordsByIntervalResponse")
    public java.util.List<ru.it.lecm.businessjournal.remote.BusinessJournalStoreRecord> getRecordsByInterval(
        @WebParam(name = "BeginDate", targetNamespace = "")
        javax.xml.datatype.XMLGregorianCalendar beginDate,
        @WebParam(name = "EndDate", targetNamespace = "")
        javax.xml.datatype.XMLGregorianCalendar endDate
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "moveRecordToArchive", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.MoveRecordToArchive")
    @WebMethod
    @ResponseWrapper(localName = "moveRecordToArchiveResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.MoveRecordToArchiveResponse")
    public boolean moveRecordToArchive(
        @WebParam(name = "RecordID", targetNamespace = "")
        java.lang.Long recordID
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getNodeById", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetNodeById")
    @WebMethod
    @ResponseWrapper(localName = "getNodeByIdResponse", targetNamespace = "http://remote.businessjournal.lecm.it.ru/", className = "ru.it.lecm.businessjournal.remote.GetNodeByIdResponse")
    public ru.it.lecm.businessjournal.remote.BusinessJournalStoreRecord getNodeById(
        @WebParam(name = "RecordID", targetNamespace = "")
        java.lang.Long recordID
    );
}
