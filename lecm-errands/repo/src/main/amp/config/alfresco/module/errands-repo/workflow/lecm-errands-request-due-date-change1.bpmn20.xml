<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/errands/workflow/requestDueDateChange_1/1.0">
    <process id="errandsRequestDueDateChange_1" name="Запросить изменение срока поручения(1)">
        <extensionElements>
            <activiti:executionListener event="end" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                <activiti:field name="script">
                    <activiti:string><![CDATA[(function(){
						var document = bpm_package.children[0];
						if (document.hasAspect('lecm-errands-aspect:isDueDateChangeRequestedAspect')) {
							document.removeAspect('lecm-errands-aspect:isDueDateChangeRequestedAspect');
						}
					})();]]></activiti:string>
                </activiti:field>
            </activiti:executionListener>
        </extensionElements>

        <startEvent id="startRequestDueDateChange" name="Запрос переноса срока поручения" activiti:formKey="lecmErrandWf:requestDueDateChange_1"></startEvent>

        <scriptTask id="requestDueDateChange" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            var document = bpm_package.children[0];

                            documentWorkflowComments.createWorkflowComment(document, lecmErrandWf_requestDueDateChange_1Reason);

                            var logText = "#initiator запросил ";
                            logText += documentScript.wrapperTitle("изменение срока", lecmErrandWf_requestDueDateChange_1Reason);
                            logText += "исполнения поручения: #mainobject.";
                            businessJournal.log(document.nodeRef.toString(), "ERRAND_CHANGE_DUE_DATE", logText, []);

                            var initiator = null;
                            var initiatorAssoc = document.assocs["lecm-errands:initiator-assoc"];
                            if (initiatorAssoc && initiatorAssoc.length == 1) {
                                initiator = initiatorAssoc[0];
                            }

                            var currentEmployee = orgstructure.getCurrentEmployee();

                            if (initiator) {
                                notifications.sendNotificationFromCurrentUser({
                                    recipients: [initiator],
                                    templateCode: 'ERRANDS_CHANGE_DUE_DATE_REQUEST',
                                    templateConfig: {
                                        mainObject: document,
                                        eventExecutor: currentEmployee
                                    }
                                });

                                execution.setVariable("requestDueDateChangeAssignee", orgstructure.getEmployeeLogin(initiator));
                            }

                            var props = [];
                            props["lecm-errands-aspect:isDueDateChangeRequested"] = true;
                            document.addAspect("lecm-errands-aspect:isDueDateChangeRequestedAspect", props);
                        ]]></activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script></script>
        </scriptTask>

        <receiveTask id="requestDueDateChangeReceiveTask" name="Receive Task"></receiveTask>

        <userTask id="changeRequestedDueDate" name="Перенести срок поручения" activiti:assignee="${requestDueDateChangeAssignee}" activiti:formKey="lecmErrandWf:requestDueDateChangeTask_1">
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>
                            task.setVariable("lecmErrandWf_requestDueDateChangeTask_1NewDueDateRadio", task.getVariable("lecmErrandWf_requestDueDateChange_1NewDateRadio"));
                            task.setVariable("lecmErrandWf_requestDueDateChangeTask_1NewDate", task.getVariable("lecmErrandWf_requestDueDateChange_1NewDate"));
                            task.setVariable("lecmErrandWf_requestDueDateChangeTask_1DateReason", task.getVariable("lecmErrandWf_requestDueDateChange_1Reason"));
                            task.setVariable("lecmErrandWf_requestDueDateChangeTask_1ChildDueDate", task.getVariable("lecmErrandWf_requestDueDateChange_1ChildDueDate"));
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>

                <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            var document = bpm_package.children[0];
                            if (document) {
                                var executor = null;
                                var executorAssoc = document.assocs["lecm-errands:executor-assoc"];
                                if (executorAssoc && executorAssoc.length == 1) {
                                    executor = executorAssoc[0];
                                }
                                var initiator = null;
                                var initiatorAssoc = document.assocs["lecm-errands:initiator-assoc"];
                                if (initiatorAssoc && initiatorAssoc.length == 1) {
                                    initiator = initiatorAssoc[0];
                                }
                                if (executor && initiator) {
                                    var decision = task.getVariableLocal("lecmErrandWf_requestDueDateChangeTask_1Result");

                                    var recipients = [];
                                    recipients.push(executor);

                                    if (decision == "REJECTED") {
                                        notifications.sendNotificationFromCurrentUser({
                                            recipients: recipients,
                                            templateCode: 'ERRANDS_REJECT_CHANGE_DUE_DATE_REQUEST',
                                            templateConfig: {
                                                mainObject: document,
                                                eventExecutor: initiator,
                                                reason: lecmErrandWf_requestDueDateChangeTask_1RejectReason
                                            }
                                        });
                                        logText = "#initiator ";
                                        logText += documentScript.wrapperTitle("отклонил", lecmErrandWf_requestDueDateChangeTask_1RejectReason);
                                        logText += " запрос на изменение срока исполнения поручения #mainobject";
                                        businessJournal.log(document.nodeRef.toString(), "ERRAND_CHANGE_DUE_DATE", logText, []);
                                    } else if (decision == "APPROVED") {
                                        var logObjects = [];
                                        var logText;
                                        var dueDateString = "";
                                        var limitless = false;
                                        var shiftSize = 0;
                                        var newLimitationDate = null;
                                        var oldLimitDate = document.properties["lecm-errands:limitation-date"];
                                        var oldLimitRadio = document.properties["lecm-errands:limitation-date-radio"];
                                        var newLimitationDate;

                                        if (lecmErrandWf_requestDueDateChangeTask_1NewDueDateRadio == "DATE") {
                                            document.properties["lecm-errands:limitation-date"] = lecmErrandWf_requestDueDateChangeTask_1NewDate;
                                            newLimitationDate = new Date(lecmErrandWf_requestDueDateChangeTask_1NewDate);
                                            shiftSize = new Date(newLimitationDate.getTime() - oldLimitDate.getTime());
                                            var day = utils.pad(newLimitationDate.getDate(), 2);
                                            var month = utils.pad(newLimitationDate.getMonth(), 2);
                                            var year = utils.pad(newLimitationDate.getFullYear(), 4);
                                            dueDateString = day + "." + month + "." + year;
                                            var wfeDate = new Date(document.properties["lecm-errands:wait-for-execution-date"]);
                                            var fromWFELimitDays = Math.round((newLimitationDate - wfeDate) / (1000 * 60 * 60 * 24));
                                            var halfLimitDays = Math.round(fromWFELimitDays / 2);
                                            wfeDate.setDate(wfeDate.getDate() + halfLimitDays);
                                            document.properties["lecm-errands:half-limit-date"] = wfeDate;
                                            var shortLimitDays = notifications.getSettingsShortLimitDays();
                                            if (fromWFELimitDays <= shortLimitDays) {
                                                document.properties["lecm-errands:is-limit-short"] = true;
                                            } else {
                                                document.properties["lecm-errands:is-limit-short"] = false;
                                            }
                                            document.properties["lecm-errands:limitation-date-radio"] = lecmErrandWf_requestDueDateChangeTask_1NewDueDateRadio;
                                        } else if (lecmErrandWf_requestDueDateChangeTask_1NewDueDateRadio == "LIMITLESS") {
                                            limitless = true;
                                            if (oldLimitDate && oldLimitRadio != "LIMITLESS" ) {
                                                document.properties["lecm-errands:limitation-date-radio"] = lecmErrandWf_requestDueDateChangeTask_1NewDueDateRadio;
                                                document.properties["lecm-errands:limitation-date"] = null;
                                                document.properties["lecm-errands:is-limit-short"] = false;
                                                document.properties["lecm-errands:half-limit-date"] = null;
                                                dueDateString = "Без срока";
                                            }
                                        }
                                        if (lecmErrandWf_requestDueDateChangeTask_1ChildDueDate) {
                                            var children = [];
                                            var childrenErrands = errands.getChildErrands(document.nodeRef.toString());
                                            var childrenResolutions = errands.getChildResolutions(document.nodeRef.toString());
                                            if (childrenErrands) {
                                                children = children.concat(childrenErrands);
                                            }
                                            if (childrenResolutions) {
                                                children = children.concat(childrenResolutions);
                                            }
                                            children.forEach(function (child) {
                                               child.properties["lecm-errands-aspect:duedate-shift-size"] = shiftSize;
                                               child.properties["lecm-errands-aspect:duedate-limitless"] = limitless;
                                               child.properties["lecm-errands-aspect:new-limitation-date"] = newLimitationDate;
                                               child.properties["lecm-errands-aspect:change-duedate-reason"] = lecmErrandWf_requestDueDateChangeTask_1DateReason;
                                               child.save();
                                            });
                                        }
                                        document.properties["lecm-errands:limitation-date-text"] = dueDateString;
                                        document.save();
                                        var recipients = [];
                                        var executorAssoc = document.assocs["lecm-errands:executor-assoc"];
                                        var coexecutorsAssoc = document.assocs["lecm-errands:coexecutors-assoc"];
                                        var controllerAssoc = document.assocs["lecm-errands:controller-assoc"];
                                        if (executorAssoc && executorAssoc.length == 1) {
                                            recipients.push(executorAssoc[0]);
                                        }
                                        if (coexecutorsAssoc && coexecutorsAssoc.length) {
                                            for (i = 0; i < coexecutorsAssoc.length; i++) {
                                                recipients.push(coexecutorsAssoc[i]);
                                            }
                                        }
                                        if (controllerAssoc && controllerAssoc.length == 1) {
                                            recipients.push(controllerAssoc[0]);
                                        }
                                        notifications.sendNotificationFromCurrentUser({
                                           recipients: recipients,
                                           templateCode: 'ERRANDS_CHANGE_DUE_DATE',
                                           templateConfig: {
                                               mainObject: document,
                                               eventExecutor: currentUser,
                                               dueDate: dueDateString,
                                               reason: lecmErrandWf_requestDueDateChangeTask_1DateReason
                                           }
                                        });
                                        logObjects.push(dueDateString);
                                        logText = "#initiator ";
                                        logText += documentScript.wrapperTitle("изменил", lecmErrandWf_requestDueDateChangeTask_1DateReason);
                                        logText += " срок исполнения поручения #mainobject на  #object1";
                                        businessJournal.log(document.nodeRef.toString(), "ERRAND_CHANGE_DUE_DATE", logText, logObjects);
                                    }
                                }
                            }
                            var document = bpm_package.children[0];
                            document.properties["lecm-errands-aspect:isDueDateChangeRequested"] = false;
                            document.save();
                            ]]></activiti:string>
                    </activiti:field>
                </activiti:taskListener>

            </extensionElements>
        </userTask>

        <endEvent id="endRequestDueDateChange" name="End"></endEvent>

        <sequenceFlow id="flow1" name="" sourceRef="startRequestDueDateChange" targetRef="requestDueDateChange"></sequenceFlow>
        <sequenceFlow id="flow2" name="" sourceRef="requestDueDateChange" targetRef="requestDueDateChangeReceiveTask"></sequenceFlow>
        <sequenceFlow id="flow3" name="" sourceRef="requestDueDateChangeReceiveTask" targetRef="changeRequestedDueDate"></sequenceFlow>
        <sequenceFlow id="flow4" name="" sourceRef="changeRequestedDueDate" targetRef="endRequestDueDateChange"></sequenceFlow>

    </process>
</definitions>
