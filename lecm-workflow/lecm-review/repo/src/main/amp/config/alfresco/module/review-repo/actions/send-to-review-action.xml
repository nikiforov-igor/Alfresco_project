<?xml version='1.0' encoding='UTF-8'?>
<items>
	<item name="cm:Отправить на ознакомление(гр.оп)" type="lecm-group-actions:script-action">
		<property name="lecm-group-actions:expression"><![CDATA[doc.hasAspect('lecm-review-ts:review-aspect') AND @reviewService.canSendToReview(doc.nodeRef)]]></property>
		<property name="cm:name"><![CDATA[Отправить на ознакомление(гр.оп)]]></property>
		<property name="lecm-group-actions:statuses"><![CDATA[]]></property>
		<property name="lecm-group-actions:isGroup"><![CDATA[false]]></property>
		<property name="lecm-group-actions:forCollection"><![CDATA[false]]></property>
		<property name="lecm-group-actions:script"><![CDATA[(function(){
  model.showModalWindow=true;
  var initiator = orgstructure.getCurrentEmployee();
  var notificationText = 'Вам необходимо ознакомиться с документом '; 
  notificationText += documentScript.wrapperDocumentLink(document, documentScript.getPresentString(document));
  notificationText += '. Инициатор ознакомления: ';
  notificationText += documentScript.wrapperLink(initiator, initiator.properties["lecm-orgstr:employee-short-name"]);

  var recipients = [];
  var reviewTable = document.associations['lecm-review-ts:review-table-assoc'];
  if (null != reviewTable) {
    var reviewTableData = documentTables.getTableDataRows((reviewTable[0]).nodeRef.toString());
    for each (var row in reviewTableData) {
      	var reviewer = row.associations['lecm-review-ts:reviewer-assoc'][0];
        var itemInitiator = row.assocs["lecm-review-ts:initiator-assoc"];
        if (itemInitiator!=null && itemInitiator.length>0 && initiator.nodeRef.toString().equals(itemInitiator[0].nodeRef.toString())) {
          if (row.properties['lecm-review-ts:review-state']=='NOT_STARTED') {
			documentMembers.addMemberWithoutCheckPermission(document, reviewer, "LECM_BASIC_PG_Reader");
            row.properties['lecm-review-ts:review-state'] = "NOT_REVIEWED";
			row.properties['lecm-review-ts:review-start-date'] = new Date();
            row.save();
          }
        }
    }
  }
  if (recipients.length>0) {
	notifications.sendNotificationFromCurrentUser(recipients, notificationText, document);
    model.message = "Документ отправлен на ознакомление";
  } else {
  	model.message = "Нет сотрудников для ознакомления с документом";
  }
  
})();]]></property>
		<property name="lecm-group-actions:order"><![CDATA[0]]></property>
		<property name="cm:title"><![CDATA[Отправить на ознакомление]]></property>
		<property name="lecm-group-actions:availableForReader"><![CDATA[false]]></property>
	</item>
</items>