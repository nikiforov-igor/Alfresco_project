<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/errands/workflow/requestCancel/1.0">
    <process id="errandsRequestCancel" name="Запросить отмену поручения">
        <startEvent id="startRequestCancel" name="Start" activiti:formKey="lecmErrandWf:requestCancel"></startEvent>
        <endEvent id="endRequestCancel" name="End"></endEvent>
        <scriptTask id="requestCancel" name="RequestCancel" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string>
	                        var document = bpm_package.children[0];

                            documentWorkflowComments.createWorkflowComment(document, lecmErrandWf_requestCancelReason);

	                        var initiator = null;
	                        var initiatorAssoc = document.assocs["lecm-errands:initiator-assoc"];
	                        if (initiatorAssoc != null &amp;&amp; initiatorAssoc.length == 1) {
	                            initiator = initiatorAssoc[0];
	                        }

	                        var currentEmployee = orgstructure.getCurrentEmployee();

	                        var logText = "Сотрудник #initiator запросил ";
	                        logText += documentScript.wrapperTitle("отмену", lecmErrandWf_requestCancelReason);
	                        logText += " поручения: #mainobject.";
	                        businessJournal.log(document.nodeRef.toString(), "CANCEL_ERRAND", logText, []);

	                        if (initiator != null) {
		                        var notificationText = documentScript.wrapperLink(currentEmployee, currentEmployee.properties["lecm-orgstr:employee-short-name"]);
		                        notificationText += " запросил(а) ";
		                        notificationText += documentScript.wrapperTitle(" отмену ", lecmErrandWf_requestCancelReason);
		                        notificationText += " поручения ";
		                        notificationText += documentScript.wrapperDocumentLink(document, "{lecm-errands:title}");
		                        notificationText += " № {lecm-errands:number}";

								notifications.sendNotificationFromCurrentUser({
									recipients: [initiator],
									templateCode: 'ERRANDS_CANCEL_REQUEST',
									templateConfig: {
										mainObject: document,
										eventExecutor: currentEmployee,
										reason: lecmErrandWf_requestCancelReason
									}
								});

	                            execution.setVariable("requestCancelAssignee", orgstructure.getEmployeeLogin(initiator));
	                            execution.setVariable("requestCancelTitle", substitude.formatNodeTitle(document, notificationText));
	                            execution.setVariable("requestCancelReason", lecmErrandWf_requestCancelReason);
	                        }

                            var props = [];
                            props["lecm-errands-aspect:isCancelRequested"] = true;
                            document.addAspect("lecm-errands-aspect:isCancelRequestedAspect", props);

                        </activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script>var test=1;</script>
        </scriptTask>
	    <userTask id="requestCancelTask" name="Запрос на отмену" activiti:assignee='${requestCancelAssignee}' activiti:formKey="lecmErrandWf:requestCancelTask">
		    <extensionElements>
			    <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
				    <activiti:field name="script">
					    <activiti:string>
						 	task.setVariableLocal("lecmErrandWf_requestCancelTaskTitle", execution.getVariable("requestCancelTitle"));
						    task.setVariable("lecmErrandWf_requestCancelTaskReason", task.getVariable("lecmErrandWf_requestCancelReason"));
					    </activiti:string>
				    </activiti:field>
			    </activiti:taskListener>
			    <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
				    <activiti:field name="script">
					    <activiti:string><![CDATA[
						    var document = bpm_package.children[0];
						    if (document != null) {
							    var executor = null;
							    var executorAssoc = document.assocs["lecm-errands:executor-assoc"];
							    if (executorAssoc != null && executorAssoc.length == 1) {
							        executor = executorAssoc[0];
						        }
							    if (executor != null) {
						            var decision = task.getVariableLocal("lecmErrandWf_requestCancelTaskResult");

						            var recipients = [];
								    recipients.push(executor);

							        if (decision == "REJECTED") {

									    notifications.sendNotificationFromCurrentUser({
											recipients: recipients,
											templateCode: 'ERRANDS_REJECT_CANCEL_REQUEST',
											templateConfig: {
												mainObject: document
											}
										});

	                                    var logText = "#initiator отклонил запрос на отмену поручения: #mainobject.";
									    businessJournal.log(document.nodeRef.toString(), "CANCEL_ERRAND", logText, []);
								    } else if (decision == "CANCEL_ERRAND") {
								        execution.setVariable("requestCancelResult", "cancelErrand");

									    var soExecutors = document.assocs["lecm-errands:coexecutors-assoc"];
									    if (soExecutors != null) {
										    for (var i = 0; i < soExecutors.length; i++) {
										        recipients.push(soExecutors[i]);
										    }
						                }

						                var controllerAssoc = document.assocs["lecm-errands:controller-assoc"];
				                        if (controllerAssoc != null && controllerAssoc.length == 1) {
				                            recipients.push(controllerAssoc[0]);
				                        }

									    notifications.sendNotificationFromCurrentUser({
											recipients: recipients,
											templateCode: 'ERRANDS_ACCEPT_CANCEL_REQUEST',
											templateConfig: {
												mainObject: document,
												isExecutorChanged: false
											},
											dontCheckAccessToObject: true
										});

									    var logText = "Сотрудник #initiator отменил поручение: #mainobject.";
									    businessJournal.log(document.nodeRef.toString(), "CANCEL_ERRAND", logText, []);
								    } else if (decision == "CHANGE_EXECUTOR") {
						                var newExecutor = task.getVariableLocal("lecmErrandWf_requestCancelTaskNewExecutor");
						                if (newExecutor != null) {
							                document.removeAssociation(executor, "lecm-errands:executor-assoc");
							                document.createAssociation(newExecutor, "lecm-errands:executor-assoc");

										    notifications.sendNotificationFromCurrentUser({
												recipients: recipients,
												templateCode: 'ERRANDS_ACCEPT_CANCEL_REQUEST',
												templateConfig: {
													mainObject: document,
													isExecutorChanged: true
												},
												dontCheckAccessToObject: true
											});

						                    var logObjects = [];
						                    logObjects.push("" + newExecutor.nodeRef);
										    var logText = "Сотрудник #initiator сменил Исполнителя поручения: #mainobject. Новый исполнитель: #object1";
										    businessJournal.log(document.nodeRef.toString(), "ERRAND_CHANGE_EXECUTOR", logText, logObjects);

						                    documentMembers.deleteMember(document, executor);
						                    lecmPermission.revokeDynamicRole(document, executor, "ERRANDS_EXECUTOR")

						                    execution.setVariable("requestCancelResult", "changeExecutor");
						                }
								    }
							    }
						    }

                            var document = bpm_package.children[0];
                            document.properties["lecm-errands-aspect:isCancelRequested"] = false;
                            document.save();
					    ]]></activiti:string>
				    </activiti:field>
			    </activiti:taskListener>
		    </extensionElements>
	    </userTask>
        <receiveTask id="errandReceiveTask" name="Receive Task"></receiveTask>
        <sequenceFlow id="flow1" name="" sourceRef="startRequestCancel" targetRef="requestCancel"></sequenceFlow>
        <sequenceFlow id="flow2" name="" sourceRef="requestCancel" targetRef="errandReceiveTask"></sequenceFlow>
        <sequenceFlow id="flow3" name="" sourceRef="errandReceiveTask" targetRef="requestCancelTask"></sequenceFlow>
        <sequenceFlow id="flow4" name="" sourceRef="requestCancelTask" targetRef="endRequestCancel"></sequenceFlow>
    </process>
</definitions>