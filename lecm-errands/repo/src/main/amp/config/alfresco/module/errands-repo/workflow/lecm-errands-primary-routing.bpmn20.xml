<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/errands/workflow/primaryRouting/1.0">
    <process id="primaryRouting" name="Первичная роспись документа">
        <startEvent id="startPrimaryRouting" name="Start" activiti:formKey="lecmErrandWf:primaryRouting"></startEvent>
        <endEvent id="endPrimaryRouting" name="End"></endEvent>
        <scriptTask id="doPrimaryRouting" name="Allocation case" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start"
                                            class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
       		                var document = bpm_package.children[0];
       		                if (document) {
	                            var errandsList = eval('(' + lecmErrandWf_primaryRoutingErrandsList + ')');
	                            if (errandsList) {
	                                var i;
	                                var childErrandsCount = 0;
	                                var childErrandsAssoc = document.sourceAssocs["lecm-errands:additional-document-assoc"];
                                    if (childErrandsAssoc && childErrandsAssoc.length) {
                                       var childErrandsCount = childErrandsAssoc.filter(function(child){
                                            return !statemachine.isDraft(child);
                                       }).length;
                                    }
	                                for (i = 0; i < errandsList.length; i++) {
	                                    var errand = errandsList[i];
                                        errand["assoc_lecm-errands_additional-document-assoc"] = document.nodeRef.toString();
	                                    var initiator = orgstructure.getCurrentEmployee();
	                                    if (initiator) {
	                                        errand["assoc_lecm-errands_initiator-assoc"] = initiator.nodeRef.toString();
	                                    }
	                                    var executorRef = errand["assoc_lecm-errands_executor-assoc"];
	                                    if (executorRef) {
                                            var executor = search.findNode(executorRef);
                                            if (executor) {
                                               statemachine.grandDynamicRoleForEmployee(document, executor, "DA_RECIPIENT_DYN");
                                            }
	                                    }
	                                    errand["prop_lecm-errands_child-index-counter"] = "" + (childErrandsCount + i + 1);
	                                    errands.createErrands(errand);
	                                }
	                            }
                            }
                   		]]></activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script>var test=1;</script>
        </scriptTask>
        <receiveTask id="primaryRoutingReceiveTask" name="Receive Task"></receiveTask>
        <sequenceFlow id="flow1" name="" sourceRef="startPrimaryRouting" targetRef="doPrimaryRouting"></sequenceFlow>
        <sequenceFlow id="flow2" name="" sourceRef="doPrimaryRouting"
                      targetRef="primaryRoutingReceiveTask"></sequenceFlow>
        <sequenceFlow id="flow3" name="" sourceRef="primaryRoutingReceiveTask"
                      targetRef="endPrimaryRouting"></sequenceFlow>
    </process>
</definitions>