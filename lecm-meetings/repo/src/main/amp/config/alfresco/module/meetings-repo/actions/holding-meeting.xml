<?xml version='1.0' encoding='UTF-8'?>
<items updateMode="CreateOrUpdate">
    <item name="cm:Провести совещание" type="lecm-group-actions:script-action">
        <property name="cm:name"><![CDATA[Провести совещание]]></property>
        <property name="lecm-group-actions:statuses"><![CDATA[Утверждено]]></property>
        <property name="lecm-group-actions:type"><![CDATA[[lecm-meetings:document]]]></property>
        <property name="lecm-group-actions:order"><![CDATA[0]]></property>
        <property name="lecm-group-actions:expression"><![CDATA[(user.currentUser().getEmployee().toString().equals(doc.attr("lecm-meetings:secretary-assoc-ref"))) OR (user.currentUser().getEmployee().toString().equals(doc.attr("lecm-events:initiator-assoc-ref")))]]></property>
        <property name="lecm-group-actions:isGroup"><![CDATA[false]]></property>
        <property name="lecm-group-actions:forCollection"><![CDATA[false]]></property>
        <property name="cm:title"><![CDATA[]]></property>
        <property name="lecm-group-actions:script"><![CDATA[if (document != null) {
  if (!document.properties["lecm-meetings:holding-started"]) {
    document.properties["lecm-meetings:holding-started"] = true;
    document.properties["lecm-meetings:holding-start-date"] = new Date();
    document.save();

    var members = events.getEventMembers(document);
    if (members != null) {
      for (var i = 0; i < members.length; i++) {
        document.createAssociation(members[i], "lecm-meetings:holding-members-assoc");
      }
    }

    var invitedMembers = events.getEventInvitedMembers(document);
    if (invitedMembers != null) {
      for (var i = 0; i < invitedMembers.length; i++) {
        document.createAssociation(invitedMembers[i], "lecm-meetings:holding-invited-members-assoc");
      }
    }

    var agendaItems = meetings.getMeetingAgendaItems(document);
    if (agendaItems != null && agendaItems.length > 0) {
      var holdingItemsTable = meetings.getMeetingHoldingItemsTable(document);
      if (holdingItemsTable != null) {
        for (var i = 0; i < agendaItems.length; i++) {
          var item = agendaItems[i];
          var properties = [];
          properties["lecm-document:indexTableRow"] = item.properties["lecm-document:indexTableRow"];
          properties["lecm-meetings-ts:holding-item-name"] = item.properties["lecm-meetings-ts:item-name"];
          properties["lecm-meetings-ts:holding-speak"] = item.properties["lecm-meetings-ts:men-spoke"];
          properties["lecm-meetings-ts:holding-agreed"] = item.properties["lecm-meetings-ts:decision"];
          properties["lecm-meetings-ts:holding-start-time"] = new Date();
          var createdItem = holdingItemsTable.createNode(null, "lecm-meetings-ts:holding-item", properties);

          var reporterAssoc = item.assocs["lecm-meetings-ts:reporter-assoc"];
          if (reporterAssoc != null && reporterAssoc.length == 1) {
            createdItem.createAssociation(reporterAssoc[0], "lecm-meetings-ts:holding-reporter-assoc");
          }

          var coreportersAssocs = item.assocs["lecm-meetings-ts:coreporter-assoc"];
          if (coreportersAssocs != null) {
            for (var j = 0; j < coreportersAssocs.length; j++) {
              createdItem.createAssociation(coreportersAssocs[j], "lecm-meetings-ts:holding-coreporters-assoc");
            }
          }

          var themeAssoc = item.assocs["lecm-meetings-ts:theme-assoc"];
          if (themeAssoc != null && themeAssoc.length == 1) {
            createdItem.createAssociation(themeAssoc[0], "lecm-meetings-ts:holding-theme-assoc");
          }
        }
      }
    }
  }

  model.redirect = 'meeting-holding?nodeRef=' + document.nodeRef;
  model.postRedirect = false;
}]]></property>
    </item>
</items>