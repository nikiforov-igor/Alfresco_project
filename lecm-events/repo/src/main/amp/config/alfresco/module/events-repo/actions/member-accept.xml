<?xml version='1.0' encoding='UTF-8'?>
<items updateMode="CreateOrUpdate">
    <item name="cm:Принять приглашение" type="lecm-group-actions:script-action">
        <property name="cm:name"><![CDATA[Принять приглашение]]></property>
        <property name="lecm-group-actions:statuses"><![CDATA[]]></property>
        <property name="lecm-group-actions:type"><![CDATA[[lecm-events:document]]]></property>
        <property name="lecm-group-actions:order"><![CDATA[0]]></property>
        <property name="lecm-group-actions:expression">
            <![CDATA[user.currentUser().hasDynamicBusinessRole(doc.getNodeRef(), "EVENTS_MEMBER_DYN") AND ("EMPTY".equals(@eventsService.getCurrentEmployeeMemberStatus(doc.getNodeRef())) OR "DECLINED".equals(@eventsService.getCurrentEmployeeMemberStatus(doc.getNodeRef()))) AND doc.attr("lecm-events:removed") == false]]></property>
        <property name="lecm-group-actions:isGroup"><![CDATA[false]]></property>
        <property name="lecm-group-actions:forCollection"><![CDATA[false]]></property>
        <property name="cm:title"><![CDATA[Принять приглашение]]></property>
        <property name="lecm-group-actions:script"><![CDATA[var memberRow = events.getCurrentEmployeeEventMemberRow(document);
if (memberRow != null) {
	memberRow.properties["lecm-events-ts:members-status"] = "CONFIRMED";
	memberRow.save();

	var repeatableEvents = events.getRepetableEvents(document, "ALL");
	if (repeatableEvents != null) {
		for (var i = 0; i < repeatableEvents.length; i++) {
			memberRow = events.getCurrentEmployeeEventMemberRow(repeatableEvents[i]);
			if (memberRow != null) {
				memberRow.properties["lecm-events-ts:members-status"] = "CONFIRMED";
				memberRow.save();
			}
		}
	}

	var currentEmployee = orgstructure.getCurrentEmployee();
	var initiator = document.assocs["lecm-events:initiator-assoc"][0];

	if (currentEmployee != null && initiator != null) {

		notifications.sendNotificationFromCurrentUser({
            recipients: [initiator],
            templateCode: 'EVENTS.INVITATION_CONFIRM',
            templateConfig: {
                mainObject: document,
                eventExecutor: currentEmployee
            }
        });

	}
}]]></property>
    </item>
</items>