<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/events/workflow/removeRepeatable/1.0">
    <process id="eventsRemoveRepeatable" name="Мероприятия: Удаление повторяющегося мероприятия">
        <startEvent id="startRemoveRepeatable" name="Start" activiti:formKey="lecmEventsWf:removeRepeatable"></startEvent>
        <endEvent id="endRemoveRepeatable" name="End"></endEvent>
        <scriptTask id="removeRepeatable" name="Request New Time" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start"
                                            class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            var document = bpm_package.children[0];
                            if (document != null) {
                                var type = lecmEventsWf_removeRepeatableType;
                                var repeatableEvents = events.getRepetableEvents(document, type);
                                for each(var ev in repeatableEvents) {
									if (ev.typeShort=="lecm-events:document" || !statemachine.isFinal(ev.nodeRef) ) {
	                                    try {
											removeEvent(ev);
											logger.debug("Document "+ev.typeShort+" "+ev.nodeRef+" marked removed.");
										} catch (e) {
											logger.log("Can't mark event "+ev.nodeRef+" as removed");
										}
									}
                                }
                                removeEvent(document);
                            }

                            function removeEvent(event) {
                                var toDate = event.properties["lecm-events:to-date"]
                                event.properties["lecm-events:removed"] = true;
                                event.save();
								if (toDate.getTime() >= new Date().getTime()) {
									events.sendCancelNotifications(document);
								}
                            }
                            ]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script></script>
        </scriptTask>
        <receiveTask id="eventsReceiveTask" name="Receive Task"></receiveTask>
        <sequenceFlow id="flow1" name="" sourceRef="startRemoveRepeatable" targetRef="removeRepeatable"></sequenceFlow>
        <sequenceFlow id="flow2" name="" sourceRef="removeRepeatable" targetRef="eventsReceiveTask"></sequenceFlow>
        <sequenceFlow id="flow3" name="" sourceRef="eventsReceiveTask" targetRef="endRemoveRepeatable"></sequenceFlow>
    </process>
</definitions>