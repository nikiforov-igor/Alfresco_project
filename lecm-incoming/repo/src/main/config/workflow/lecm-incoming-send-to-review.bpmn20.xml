<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/incoming/workflow/sendToReview/1.0">
	<process id="incomingSendToReview" name="Входящие: направить на рассмотрение">
		<startEvent id="startSendToReview" name="Start" activiti:formKey="lecmIncomingWf:sendToReview"></startEvent>
		<endEvent id="endSendToReview" name="End"></endEvent>
		<scriptTask id="sendToReview" name="Send to review" scriptFormat="javascript">
			<extensionElements>
				<activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
					<activiti:field name="script">
						<activiti:string><![CDATA[
							var document = bpm_package.children[0];
							if (document != null) {
								var recipient = execution.getVariable("lecmIncomingWf_sendToReviewRecipient");
								if (recipient != null) {
								 	if (recipient.typeShort == "lecm-orgstr:employee") {
								    	statemachine.grandDynamicRoleForEmployee(document, recipient, "INCOMING_REVIEWER_DYNAMIC");

								    	var notificationText = "Вам поступил документ на рассмотрение ";
	                                    notificationText += documentScript.wrapperDocumentLink(document, "{lecm-eds-document:document-type-assoc/cm:name} от {lecm-incoming:sender-assoc/cm:name}");
	                                    var recipients = [];
	                                    recipients.push(recipient.nodeRef.toString());
	                                    notifications.sendNotificationFromCurrentUser(recipients, notificationText, document, true);

	                                    var logObjects = [];
				                        logObjects.push("" + recipient.nodeRef);
				                        var logText = "Документ #mainobject был направлен на рассмотрение сотруднику #object1";
				                        businessJournal.log(document.nodeRef.toString(), "EDIT", logText, logObjects);
								    } else if (recipient.typeShort == "lecm-orgstr:organization-unit") {
								    	var recipients = [];

								    	var allEmployeeInUnit = orgstructure.getEmployeesInUnit(recipient);
								    	if (allEmployeeInUnit != null) {
								    	    for (var i = 0; i < allEmployeeInUnit.length; i++) {
								    	        var employee = allEmployeeInUnit[i];
								            	if (orgstructure.hasBusinessRole(employee, "INCOMING_REVIEWER_IN_UNIT")) {
								                	recipients.push(employee);
								            	}
								    	    }
								    	}

								    	if (recipients.length > 0) {
								    	    for (var i = 0; i < recipients.length; i++) {
								    	        statemachine.grandDynamicRoleForEmployee(document, recipients[i], "INCOMING_REVIEWER_DYNAMIC");
								    	    }

									        var notificationText = "Поступил документ на рассмотрение ";
		                                    notificationText += documentScript.wrapperDocumentLink(document, "{lecm-eds-document:document-type-assoc/cm:name} от {lecm-incoming:sender-assoc/cm:name}");
		                                    notifications.sendNotificationFromCurrentUser(recipients, notificationText, document, true);
								    	}

								    	var logObjects = [];
				                        logObjects.push("" + recipient.nodeRef);
				                        var logText = "Документ #mainobject был направлен на рассмотрение в подразделение #object1";
				                        businessJournal.log(document.nodeRef.toString(), "EDIT", logText, logObjects);
								    }
								} else {
									var recipients = orgstructure.getEmployeesByBusinessRoleId("INCOMING_REVIEWER", true);

									if (recipients.length > 0) {
							            for (var i = 0; i < recipients.length; i++) {
							                statemachine.grandDynamicRoleForEmployee(document, recipients[i], "INCOMING_REVIEWER_DYNAMIC");
							            }

								        var notificationText = "Поступил документ на рассмотрение ";
	                                    notificationText += documentScript.wrapperDocumentLink(document, "{lecm-eds-document:document-type-assoc/cm:name} от {lecm-incoming:sender-assoc/cm:name}");
	                                    notifications.sendNotificationFromCurrentUser(recipients, notificationText, document, true);
							        }

			                        var logText = "Документ #mainobject был направлен рассматривающим";
			                        businessJournal.log(document.nodeRef.toString(), "EDIT", logText, []);
								}
							}
						]]></activiti:string>
					</activiti:field>
				</activiti:executionListener>
			</extensionElements>
			<script></script>
		</scriptTask>
		<receiveTask id="incomingReceiveTask" name="Receive Task"></receiveTask>
		<sequenceFlow id="flow1" name="" sourceRef="startSendToReview" targetRef="sendToReview"></sequenceFlow>
		<sequenceFlow id="flow2" name="" sourceRef="sendToReview" targetRef="incomingReceiveTask"></sequenceFlow>
		<sequenceFlow id="flow3" name="" sourceRef="incomingReceiveTask" targetRef="endSendToReview"></sequenceFlow>
	</process>
</definitions>