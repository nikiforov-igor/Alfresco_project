<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>ru.it.lecm.documents-templates</groupId>
		<artifactId>documents-templates</artifactId>
		<version>1.8.6</version>
	</parent>

	<artifactId>documents-templates-share</artifactId>
	<packaging>amp</packaging>
	<name>Logic ECM Documents Templates Share</name>
	<!--
		need to list these as a provided so that Maven doesn't download them
		and include them in the AMP, they are provided by Alfresco
	-->
	<dependencies>
		<!--<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>share</artifactId>
			<classifier>classes</classifier>
		</dependency>-->
		<!-- Don't add here amp dependencies as it will break amp packaging -->
	</dependencies>

	<build>
		<plugins>
			<!-- Needed for cross OS compatibility in acp/zip encoding -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-nosnapshot-plugin</artifactId>
				<groupId>org.alfresco.maven</groupId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin> -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.alfresco.maven.plugin</groupId>
				<artifactId>alfresco-maven-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>
		</plugins>
		<!--
			Copies and filters resources in build folder so maven-amp-plugin can
			pick them up
		-->
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/amp</directory>
				<targetPath>${app.amp.output.folder}</targetPath>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/java</directory>
			</resource>
		</resources>
	</build>
</project>
