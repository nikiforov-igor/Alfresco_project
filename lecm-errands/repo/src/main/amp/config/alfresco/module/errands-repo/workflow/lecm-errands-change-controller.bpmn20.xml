<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/errands/workflow/changeController/1.0">
	<process id="errandsChangeController" name="Сменить контролёра">
        <startEvent id="startChangeController" name="Start" activiti:formKey="lecmErrandWf:changeController"></startEvent>
        <endEvent id="endChangeController" name="End"></endEvent>
        <scriptTask id="changeController" name="Change Controller" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            var document = bpm_package.children[0];
                            if (document) {
                                if (lecmErrandWf_changeControllerNewController != null) {
			                        var logObjects = [];
			                        logObjects.push("" + lecmErrandWf_changeControllerNewController.nodeRef);
			                        var logText = "#initiator ";
			                        logText += documentScript.wrapperTitle("изменил", lecmErrandWf_changeControllerReason);
			                        logText += " контролёра по поручению #mainobject на #object1";
			                        businessJournal.log(document.nodeRef.toString(), "ERRAND_CHANGE_CONTROLLER", logText, logObjects);

			                        var currentEmployee = orgstructure.getCurrentEmployee();
                                    var members = [];
			                        var recipients = [];
                                    var controller = null;
			                        var controllerAssoc = document.assocs["lecm-errands:controller-assoc"];
			                        if (controllerAssoc && controllerAssoc.length == 1) {
                                        controller = controllerAssoc[0];
                                        recipients.push(controller);
                                        members.push(controller);
			                        }
                                    members.push(lecmErrandWf_changeControllerNewController);

                                    var executorAssoc = document.assocs["lecm-errands:executor-assoc"];
                                    if (executorAssoc && executorAssoc.length) {
                                        recipients.push(executorAssoc[0]);
                                    }
                                    var coexecutorsAssocs = document.assocs["lecm-errands:coexecutors-assoc"];
                                    if (coexecutorsAssocs && coexecutorsAssocs.length) {
                                        for (var i = 0; i != coexecutorsAssocs.length; i++) {
                                            recipients.push(coexecutorsAssocs[i]);
                                        }
                                    }
                                    if (recipients && recipients.length) {
                                        notifications.sendNotificationFromCurrentUser({
                                            recipients: recipients,
                                            templateCode: 'ERRANDS_CHANGE_CONTROLLER',
                                            templateConfig: {
                                                mainObject: document,
                                                eventExecutor: currentEmployee,
                                                reason: lecmErrandWf_changeControllerReason,
                                                newController: lecmErrandWf_changeControllerNewController
                                            },
                                            dontCheckAccessToObject: true
                                        });
                                    }
                                    if (controller) {
                                        document.removeAssociation(controller, "lecm-errands:controller-assoc");
                                        lecmPermission.revokeDynamicRole(document, controller, "ERRANDS_CONTROLLER");
                                    }

                                    if (members) {
                                        for each (var member in members) {
                                            documentMembers.addMemberWithoutCheckPermission(document, member, "LECM_BASIC_PG_Reader", true);
                                        }
                                    }

                                    var baseDocumentAssoc = document.assocs["lecm-errands:base-assoc"];
                                        transferRights = document.properties["lecm-errands:settings-transfer-rights"];
                                    if (baseDocumentAssoc && transferRights) {
                                        documentMembers.addMemberWithoutCheckPermission(baseDocumentAssoc[0], lecmErrandWf_changeControllerNewController, "LECM_BASIC_PG_Reader", true);
                                    }

                                    var isOnControl = document.properties["lecm-document-aspects:is-on-control"];
                                    if (!isOnControl) {
                                        document.properties["lecm-document-aspects:is-on-control"] = true;
                                        document.save();
                                    }

	                                document.createAssociation(lecmErrandWf_changeControllerNewController, "lecm-errands:controller-assoc");
                                    statemachine.grandDynamicRoleForEmployee(document, lecmErrandWf_changeControllerNewController, "ERRANDS_CONTROLLER");

                                    var newController = null;
                                    var newControllerAssoc = document.assocs["lecm-errands:controller-assoc"];
                                    if (newControllerAssoc && newControllerAssoc.length == 1) {
                                        newController = newControllerAssoc[0];
                                    }

                                    notifications.sendNotificationFromCurrentUser({
                                        recipients: [newController],
                                        templateCode: 'ERRANDS_CONTROLLER_ASSIGN',
                                        templateConfig: {
                                            mainObject: document,
                                            eventExecutor: currentEmployee
                                        },
                                        dontCheckAccessToObject: true
                                    });
                                }
                            }]]>
                        </activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script>var test=1;</script>
        </scriptTask>
        <receiveTask id="errandReceiveTask" name="Receive Task"></receiveTask>
        <sequenceFlow id="flow1" name="" sourceRef="startChangeController" targetRef="changeController"></sequenceFlow>
        <sequenceFlow id="flow2" name="" sourceRef="changeController" targetRef="errandReceiveTask"></sequenceFlow>
        <sequenceFlow id="flow3" name="" sourceRef="errandReceiveTask" targetRef="endChangeController"></sequenceFlow>
	</process>
</definitions>