<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.it.ru/logicECM/workflow/approval">
  <process id="lecmApprovementWorkflow" name="Согласование" isExecutable="true">
    <extensionElements>
      <activiti:executionListener event="end" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
        <activiti:field name="script">
          <activiti:string><![CDATA[(function(){ /* process happy end */
  /* пометка итерации как завершенной */
  var isEnded = execution.isEnded();
  var deleteReason = (execution.getDeleteReason() != null) ? '' + execution.getDeleteReason() : null;
  var document, documentLink, msg, initiator, currentIteration, stages, decisions, approvalDecision, i, j, size, length, currentDecision, items, state;
  if (isEnded || deleteReason) {
    document = bpm_package.children[0];
    documentLink = documentScript.wrapperDocumentLink(document, '{lecm-document:ext-present-string}');
    msg = 'Принято решение по согласованию документа ' + documentLink;
    initiator = execution.getVariable('initiatorEmployee');
    currentIteration = execution.getVariableLocal('currentIteration');
    stages = currentIteration.getChildAssocsByType('lecmWorkflowRoutes:stage');
    decisions = ['REJECTED', 'APPROVED_WITH_REMARK', 'APPROVED'];
    approvalDecision = 'NO_DECISION';

    function someDecision(element, index, array) {
      return ('' + element.properties['lecmApproveAspects:approvalDecision']) == currentDecision;
    }

    /* установка итерации решения о согласовании */
    for (i = 0, size = decisions.length; i < size; ++i) {
      currentDecision = decisions[i];
      if (stages.some(someDecision)) {
        approvalDecision = currentDecision;
        break;
      }
    }
    /* отмечаем пустые этапы как SKIPPED */
    /* этапы в состоянии NEW или ACTIVE как CANCELLED */
    /* строки этапов в состоянии NEW или ACTIVE как CANCELLED */
    for (i = 0, size = stages.length; i < size; ++i) {
      state = '' + stages[i].properties['lecmApproveAspects:approvalState'];
      if ('NEW' == state || 'ACTIVE' == state) {
        stages[i].properties['lecmApproveAspects:approvalState'] = 'CANCELLED';
        stages[i].save();
      }
      items = stages[i].getChildAssocsByType('lecmWorkflowRoutes:stageItem');
      if (!(items && items.length)) {
        stages[i].properties['lecmApproveAspects:approvalState'] = 'SKIPPED';
        stages[i].save();
      } else {
        for (j = 0, length = items.length; j < length; ++j) {
          state = '' + items[j].properties['lecmApproveAspects:approvalState'];
          if ('NEW' == state || 'ACTIVE' == state) {
            items[j].properties['lecmApproveAspects:approvalState'] = 'CANCELLED';
            items[j].save();
          }
        }
      }
    }

    /* учет принудительного прерывания процесса */
    if (execution.getVariableLocal('forcedDecision')) {
      approvalDecision = execution.getVariableLocal('forcedDecision');
      logger.debug('********************************************************************************');
      logger.debug('lecmApprovementWorkflow was forced with decision ' + approvalDecision);
      logger.debug('********************************************************************************');
    }
    currentIteration.properties['lecmApproveAspects:approvalState'] = 'COMPLETE';
    currentIteration.properties['lecmApproveAspects:approvalDecision'] = approvalDecision;
    currentIteration.save();
    /* уведомление о завершении согласования */
    notifications.sendNotification([initiator.nodeRef.toString()], msg, document);
    /* запись в БЖ о завершении согласования */
    businessJournal.log(document.nodeRef.toString(), 'APPROVAL', 'Принято решение по согласованию документа #mainobject', []);
    /* отцепляемся от машины состояний, потому что мы все сделали */
    approval.disconnectFromStatemachine(document, 'activiti$' + execution.getProcessInstanceId());
  }
})();]]></activiti:string>
        </activiti:field>
        <activiti:field name="runAs">
          <activiti:string><![CDATA[workflow]]></activiti:string>
        </activiti:field>
      </activiti:executionListener>
    </extensionElements>
    <startEvent id="startevent1" name="Start" activiti:formKey="lecmApprove3:startTask"></startEvent>
    <serviceTask id="alfrescoScripttask1" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
      <extensionElements>
        <activiti:field name="runAs">
          <activiti:string><![CDATA[workflow]]></activiti:string>
        </activiti:field>
        <activiti:field name="script">
          <activiti:string><![CDATA[(function(){ /*старт БП, подготовка переменных */
  var document = bpm_package.children[0];
  /* получение nodeRef-ы на текущую итерацию */
  var currentIteration = routesService.getDocumentCurrentIteration(document);
  /* пометка итерации как активной */
  currentIteration.properties['lecmApproveAspects:approvalState'] = 'ACTIVE';
  currentIteration.save();
  var routeInterruptAfterReject = currentIteration.properties['lecmWorkflowRoutes:routeInterruptAfterReject'];
  var routeNotifyAboutEveryDecision = currentIteration.properties['lecmWorkflowRoutes:routeNotifyAboutEveryDecision'];
  execution.setVariableLocal('currentIteration', approval.getWorkflowNodeConverter().convertNode(currentIteration.nodeRef));
  execution.setVariable('routeInterruptAfterReject', routeInterruptAfterReject);
  execution.setVariable('routeNotifyAboutEveryDecision', routeNotifyAboutEveryDecision);
  execution.setVariable('initiatorEmployee', approval.getWorkflowNodeConverter().convertNode(orgstructure.getCurrentEmployee().nodeRef));
  /* привязывание процесса к машине состояний документа */
  approval.connectToStatemachine(document, 'activiti$' + execution.getProcessInstanceId(), 'activiti$' + execution.getProcessDefinition().getKey());
})();]]></activiti:string>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow1" sourceRef="startevent1" targetRef="alfrescoScripttask1"></sequenceFlow>
    <serviceTask id="alfrescoScripttask2" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
      <extensionElements>
        <activiti:field name="script">
          <activiti:string><![CDATA[(function(){ /* итератор по этапам */
  /* получение коллекции этапов */
  var currentIteration = execution.getVariableLocal('currentIteration');
  var stages = currentIteration.getChildAssocsByType('lecmWorkflowRoutes:stage');
  var stage, i, size, approvalState, items, isTemp;
  for (i = 0, size = stages.length; i < size; ++i) {
    stage = stages[i];
    isTemp = stage.hasAspect('sys:temporary') || stage.hasAspect('lecm-workflow:temp');
    approvalState = stage.properties['lecmApproveAspects:approvalState'];
    approvalState = (approvalState != null) ? '' + approvalState : null;
    items = stage.getChildAssocsByType('lecmWorkflowRoutes:stageItem');
    /* выбор первого неактивного этапа */
    if (!isTemp && (!approvalState || 'NEW' == approvalState) && items && items.length) {
      break;
    }
  }
  /* пометка этапа как активного */
  stage.properties['lecmApproveAspects:approvalState'] = 'ACTIVE';
  stage.save();
  /* передача этапа в подпроцесс */
  execution.setVariable('currentStage', approval.getWorkflowNodeConverter().convertNode(stage.nodeRef));
})();]]></activiti:string>
        </activiti:field>
        <activiti:field name="runAs">
          <activiti:string><![CDATA[workflow]]></activiti:string>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow2" sourceRef="alfrescoScripttask1" targetRef="alfrescoScripttask2"></sequenceFlow>
    <subProcess id="subprocess1" name="Sub Process">
      <startEvent id="startevent2" name="Start"></startEvent>
      <serviceTask id="alfrescoScripttask4" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
        <extensionElements>
          <activiti:field name="script">
            <activiti:string><![CDATA[(function(){ /* старт подпроцесса, подготовка переменных */
  var currentStage = execution.getVariable('currentStage');
  var stageWorkflowType = currentStage.properties['lecmWorkflowRoutes:stageWorkflowType'];
  var stageWorkflowTerm = currentStage.properties['lecmWorkflowRoutes:stageWorkflowTerm'];
  execution.setVariableLocal('stageWorkflowType', stageWorkflowType);
  execution.setVariableLocal('stageWorkflowTerm', stageWorkflowTerm);
})();]]></activiti:string>
          </activiti:field>
          <activiti:field name="runAs">
            <activiti:string><![CDATA[workflow]]></activiti:string>
          </activiti:field>
        </extensionElements>
      </serviceTask>
      <sequenceFlow id="flow9" sourceRef="startevent2" targetRef="alfrescoScripttask4"></sequenceFlow>
      <exclusiveGateway id="exclusivegateway3" name="Exclusive Gateway"></exclusiveGateway>
      <sequenceFlow id="flow10" sourceRef="alfrescoScripttask4" targetRef="exclusivegateway3"></sequenceFlow>
      <serviceTask id="alfrescoScripttask5" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
        <extensionElements>
          <activiti:field name="script">
            <activiti:string><![CDATA[(function(){ /* итератор */
  /* получение коллекции stageItem */
  var currentStage = execution.getVariable('currentStage');
  var stageItems = currentStage.getChildAssocsByType('lecmWorkflowRoutes:stageItem');
  var stageItem, i, size, approvalState;
  var employees;
  for (i = 0, size = stageItems.length; i < size; ++i) {
    stageItem = stageItems[i];
    approvalState = stageItem.properties['lecmApproveAspects:approvalState'];
    approvalState = (approvalState != null) ? '' + approvalState : null;
    /* выбор первого неактивного */
    if (!approvalState || 'NEW' == approvalState) {
      break;
    }
  }
  /* пометка как активного */
  stageItem.properties['lecmApproveAspects:approvalState'] = 'ACTIVE';
  stageItem.save();
  execution.setVariableLocal('currentStageItem', approval.getWorkflowNodeConverter().convertNode(stageItem.nodeRef));
})();]]></activiti:string>
          </activiti:field>
          <activiti:field name="runAs">
            <activiti:string><![CDATA[workflow]]></activiti:string>
          </activiti:field>
        </extensionElements>
      </serviceTask>
      <sequenceFlow id="flow11" sourceRef="exclusivegateway3" targetRef="alfrescoScripttask5">
        <conditionExpression xsi:type="tFormalExpression"><![CDATA[${execution.getVariableLocal('stageWorkflowType') == 'SEQUENTIAL'}]]></conditionExpression>
      </sequenceFlow>
      <userTask id="usertask1" name="User Task" activiti:assignee="${currentStageItem.properties['lecmWorkflowRoutes:stageItemUserName']}" activiti:formKey="lecmApprove3:approveTask">
        <extensionElements>
          <activiti:taskListener event="assignment" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
            <activiti:field name="script">
              <activiti:string><![CDATA[(function(){ /* assign */
  var assignee = '' + task.getAssignee();
  var previousAssignee = '' + task.getVariableLocal('previousAssignee');
  var document, documentLink, msg, employee;
  if (previousAssignee != assignee) {
    task.setVariableLocal('previousAssignee', assignee);
    document = bpm_package.children[0];
    documentLink = documentScript.wrapperDocumentLink(document, '{lecm-document:ext-present-string}');
    msg = documentLink + ' направлен Вам на согласование.';
    employee = task.getVariableLocal('effectiveEmployee');
    /* добавляем актуального исполнителя в динамическую бизнес роль из переменной workflowDynRole */
    lecmPermission.grantDynamicRole(document, employee, 'LECM_APPROVER_DYN', 'LECM_BASIC_PG_Reviewer');
    /* уведомление актуальному исполнителю */
    notifications.sendNotification([employee.nodeRef.toString()], msg, document);
  }
})();]]></activiti:string>
            </activiti:field>
          </activiti:taskListener>
          <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
            <activiti:field name="script">
              <activiti:string><![CDATA[(function(){ /* create */
  /* получаем настоящий execution */
  var realExecution = (execution.parent) ? execution.parent : execution;
  var document = bpm_package.children[0];
  var currentStage = realExecution.getVariable('currentStage');
  var stageItem = realExecution.getVariableLocal('currentStageItem');
  var employees = stageItem.assocs['lecmWorkflowRoutes:stageItemEmployeeAssoc'];
  var effectiveEmployee, userName, term, dueDate;
  /* вычисление userName */
  if (employees && employees.length) {
    effectiveEmployee = approval.getEffectiveEmployee(employees[0], 'LECM_APPROVER_DYN');
    task.setVariableLocal('originalEmployee', approval.getWorkflowNodeConverter().convertNode(employees[0].nodeRef));
    task.setVariableLocal('effectiveEmployee', approval.getWorkflowNodeConverter().convertNode(effectiveEmployee.nodeRef));
    userName = orgstructure.getEmployeeLogin(effectiveEmployee);

    /* вычисление dueDate */
    term = stageItem.properties['lecmWorkflowRoutes:stageItemTerm'];
    term = (term) ? term : currentStage.properties['lecmWorkflowRoutes:stageWorkflowTerm'];
    dueDate = workCalendar.getNextWorkingDateByDays(new Date(), term);

    stageItem.properties['lecmWorkflowRoutes:stageItemUserName'] = userName;
    stageItem.properties['lecmWorkflowRoutes:stageItemStartDate'] = approval.getValueConverter().convertValueForJava(new Date());
    stageItem.properties['lecmWorkflowRoutes:stageItemDueDate'] = dueDate;
    stageItem.save();
    stageItem.removeAssociation(employees[0], 'lecmWorkflowRoutes:stageItemEmployeeAssoc');
    stageItem.createAssociation(effectiveEmployee, 'lecmWorkflowRoutes:stageItemEmployeeAssoc');

    /* подготовка переменных для таймера */
    realExecution.setVariableLocal('localAssignee', approval.getWorkflowNodeConverter().convertNode(effectiveEmployee.nodeRef));
    realExecution.setVariableLocal('localDueDate', dueDate);

    task.setDueDate(dueDate);
    task.setAssignee(userName);
  }
})();]]></activiti:string>
            </activiti:field>
          </activiti:taskListener>
          <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
            <activiti:field name="script">
              <activiti:string><![CDATA[(function(){ /* complete */
  /* получаем настоящий execution */
  var realExecution = (execution.parent) ? execution.parent : execution;
  var decision = task.getVariableLocal('lecmApprove3_decision');
  var comment = (task.getVariableLocal('bpm_comment') != null) ? '' + task.getVariableLocal('bpm_comment') : null;
  var attachment = task.getVariableLocal('lecmApprove3_commentAssoc');
  var stageItem = realExecution.getVariableLocal('currentStageItem');
  var notifyAboutEveryDecision = realExecution.getVariable('routeNotifyAboutEveryDecision').booleanValue();
  var document = bpm_package.children[0];
  var employee = task.getVariableLocal('effectiveEmployee');
  var documentLink, msg, initiator;
  /* внутрь stageItem перемещаем загруженный файл с комментарием */
  if (attachment) {
    attachment.move(stageItem);
  }
  stageItem.properties['lecmWorkflowRoutes:stageItemCompleteDate'] = approval.getValueConverter().convertValueForJava(new Date());
  stageItem.properties['lecmApproveAspects:approvalDecision'] = decision;
  stageItem.properties['lecmWorkflowRoutes:stageItemComment'] = comment;
  stageItem.properties['lecmApproveAspects:approvalState'] = 'COMPLETE';
  stageItem.properties['lecmApproveAspects:hasComment'] = !!(comment || attachment);
  stageItem.save();
  /* отбираем ранее нарезанные права */
  /* lecmPermission.revokeDynamicRole(document, employee, 'LECM_APPROVER_DYN'); */
  /* добавляем в участники как читателя */
  documentMembers.addMemberWithoutCheckPermission(document, employee, 'LECM_BASIC_PG_Reader', true);
  /* уведомление о согласовании */
  if (notifyAboutEveryDecision) {
    documentLink = documentScript.wrapperDocumentLink(document, '{lecm-document:ext-present-string}');
    initiator = realExecution.getVariable('initiatorEmployee');
    msg = 'Сотрудник ' + employee.properties['lecm-orgstr:employee-short-name'] + ' принял решение по согласованию документа ' + documentLink;
    notifications.sendNotification([initiator.nodeRef.toString()], msg, document);
    /* запись в БЖ о согласовании конкретным участником */
    businessJournal.log(document.nodeRef.toString(), 'APPROVAL', 'Сотрудник #object1 принял решение по согласованию документа #mainobject', [employee.nodeRef.toString()]);
  }
})();]]></activiti:string>
            </activiti:field>
          </activiti:taskListener>
        </extensionElements>
      </userTask>
      <sequenceFlow id="flow12" sourceRef="alfrescoScripttask5" targetRef="usertask1"></sequenceFlow>
      <serviceTask id="alfrescoScripttask6" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
        <extensionElements>
          <activiti:field name="script">
            <activiti:string><![CDATA[(function(){ /* has next */
  var stageItem = execution.getVariableLocal('currentStageItem');
  var stageItemDecision = '' + stageItem.properties['lecmApproveAspects:approvalDecision'];
  var currentStage = execution.getVariable('currentStage');
  var stageItems = currentStage.getChildAssocsByType('lecmWorkflowRoutes:stageItem');
  var i, size, approvalState, hasNextStageItem;
  for (i = 0, size = stageItems.length; i < size; ++i) {
    approvalState = stageItems[i].properties['lecmApproveAspects:approvalState'];
    approvalState = (approvalState != null) ? '' + approvalState : null;
    /* поиск неактивных этапов */
    if (!approvalState || 'NEW' == approvalState) {
      hasNextStageItem = true;
      break;
    }
  }
  hasNextStageItem = !!(hasNextStageItem && (!execution.getVariable('routeInterruptAfterReject').booleanValue() || stageItemDecision != 'REJECTED'));
  execution.setVariableLocal('hasNextStageItem', hasNextStageItem);
})();]]></activiti:string>
          </activiti:field>
          <activiti:field name="runAs">
            <activiti:string><![CDATA[workflow]]></activiti:string>
          </activiti:field>
        </extensionElements>
      </serviceTask>
      <sequenceFlow id="flow13" sourceRef="usertask1" targetRef="alfrescoScripttask6"></sequenceFlow>
      <exclusiveGateway id="exclusivegateway4" name="Exclusive Gateway"></exclusiveGateway>
      <sequenceFlow id="flow14" sourceRef="alfrescoScripttask6" targetRef="exclusivegateway4"></sequenceFlow>
      <exclusiveGateway id="exclusivegateway5" name="Exclusive Gateway"></exclusiveGateway>
      <sequenceFlow id="flow15" sourceRef="exclusivegateway4" targetRef="alfrescoScripttask5">
        <conditionExpression xsi:type="tFormalExpression"><![CDATA[${execution.getVariableLocal('hasNextStageItem')}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow id="flow16" sourceRef="exclusivegateway4" targetRef="exclusivegateway5">
        <conditionExpression xsi:type="tFormalExpression"><![CDATA[${!execution.getVariableLocal('hasNextStageItem')}]]></conditionExpression>
      </sequenceFlow>
      <userTask id="usertask2" name="User Task" activiti:assignee="${currentStageItem.properties['lecmWorkflowRoutes:stageItemUserName']}" activiti:formKey="lecmApprove3:approveTask">
        <extensionElements>
          <activiti:taskListener event="assignment" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
            <activiti:field name="script">
              <activiti:string><![CDATA[(function(){ /* assign multi */
  var assignee = '' + task.getAssignee();
  var previousAssignee = '' + task.getVariableLocal('previousAssignee');
  var document, documentLink, msg, employee;
  if (previousAssignee != assignee) {
    task.setVariableLocal('previousAssignee', assignee);
    document = bpm_package.children[0];
    documentLink = documentScript.wrapperDocumentLink(document, '{lecm-document:ext-present-string}');
    msg = documentLink + ' направлен Вам на согласование.';
    employee = task.getVariableLocal('effectiveEmployee');
    /* добавляем актуального исполнителя в динамическую бизнес роль из переменной workflowDynRole */
    lecmPermission.grantDynamicRole(document, employee, 'LECM_APPROVER_DYN', 'LECM_BASIC_PG_Reviewer');
    /* уведомление актуальному исполнителю */
    notifications.sendNotification([employee.nodeRef.toString()], msg, document);
  }
})();]]></activiti:string>
            </activiti:field>
          </activiti:taskListener>
          <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
            <activiti:field name="script">
              <activiti:string><![CDATA[(function(){ /* create multi */
  /* получаем настоящий execution */
  var realExecution = (execution.parent) ? execution.parent : execution;
  var document = bpm_package.children[0];
  var currentStage = realExecution.getVariable('currentStage');
  var employees = currentStageItem.assocs['lecmWorkflowRoutes:stageItemEmployeeAssoc'];
  var effectiveEmployee, userName, term, dueDate;
  /* пометка как активного */
  currentStageItem.properties['lecmApproveAspects:approvalState'] = 'ACTIVE';
  currentStageItem.save();
  if (employees && employees.length) {
    effectiveEmployee = approval.getEffectiveEmployee(employees[0], 'LECM_APPROVER_DYN');
    task.setVariableLocal('originalEmployee', approval.getWorkflowNodeConverter().convertNode(employees[0].nodeRef));
    task.setVariableLocal('effectiveEmployee', approval.getWorkflowNodeConverter().convertNode(effectiveEmployee.nodeRef));
    userName = orgstructure.getEmployeeLogin(effectiveEmployee);

    /* вычисление dueDate */
    term = currentStageItem.properties['lecmWorkflowRoutes:stageItemTerm'];
    term = (term) ? term : currentStage.properties['lecmWorkflowRoutes:stageWorkflowTerm'];
    dueDate = workCalendar.getNextWorkingDateByDays(new Date(), term);

    currentStageItem.properties['lecmWorkflowRoutes:stageItemUserName'] = userName;
    currentStageItem.properties['lecmWorkflowRoutes:stageItemStartDate'] = approval.getValueConverter().convertValueForJava(new Date());
    currentStageItem.properties['lecmWorkflowRoutes:stageItemDueDate'] = dueDate;
    currentStageItem.save();
    currentStageItem.removeAssociation(employees[0], 'lecmWorkflowRoutes:stageItemEmployeeAssoc');
    currentStageItem.createAssociation(effectiveEmployee, 'lecmWorkflowRoutes:stageItemEmployeeAssoc');

    /* подготовка переменных для таймера */
    realExecution.setVariableLocal('localAssignee', approval.getWorkflowNodeConverter().convertNode(effectiveEmployee.nodeRef));
    realExecution.setVariableLocal('localDueDate', dueDate);

    task.setDueDate(dueDate);
    task.setAssignee(userName);
  }
})();]]></activiti:string>
            </activiti:field>
          </activiti:taskListener>
          <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
            <activiti:field name="script">
              <activiti:string><![CDATA[(function(){ /* complete multi */
  /* получаем настоящий execution */
  var realExecution = (execution.parent) ? execution.parent : execution;
  var decision = task.getVariableLocal('lecmApprove3_decision');
  var comment = (task.getVariableLocal('bpm_comment') != null) ? '' + task.getVariableLocal('bpm_comment') : null;
  var attachment = task.getVariableLocal('lecmApprove3_commentAssoc');
  var routeInterruptAfterReject = realExecution.getVariable('routeInterruptAfterReject').booleanValue();
  var isCompleted = routeInterruptAfterReject && decision == 'REJECTED';
  var notifyAboutEveryDecision = realExecution.getVariable('routeNotifyAboutEveryDecision').booleanValue();
  var document = bpm_package.children[0];
  var employee = task.getVariableLocal('effectiveEmployee');
  var documentLink, msg, initiator;
  task.setVariable('isCompleted', isCompleted);
  /* внутрь stageItem перемещаем загруженный файл с комментарием */
  if (attachment) {
    attachment.move(currentStageItem);
  }
  currentStageItem.properties['lecmWorkflowRoutes:stageItemCompleteDate'] = approval.getValueConverter().convertValueForJava(new Date());
  currentStageItem.properties['lecmApproveAspects:approvalDecision'] = decision;
  currentStageItem.properties['lecmWorkflowRoutes:stageItemComment'] = comment;
  currentStageItem.properties['lecmApproveAspects:approvalState'] = 'COMPLETE';
  currentStageItem.properties['lecmApproveAspects:hasComment'] = !!(comment || attachment);
  currentStageItem.save();
  /* отбираем ранее нарезанные права */
  /* lecmPermission.revokeDynamicRole(document, employee, 'LECM_APPROVER_DYN'); */
  /* добавляем в участники как читателя */
  documentMembers.addMemberWithoutCheckPermission(document, employee, 'LECM_BASIC_PG_Reader', true);
  /* уведомление о согласовании */
  if (notifyAboutEveryDecision) {
    documentLink = documentScript.wrapperDocumentLink(document, '{lecm-document:ext-present-string}');
    initiator = realExecution.getVariable('initiatorEmployee');
    msg = 'Сотрудник ' + employee.properties['lecm-orgstr:employee-short-name'] + ' принял решение по согласованию документа ' + documentLink;
    notifications.sendNotification([initiator.nodeRef.toString()], msg, document);
    /* запись в БЖ о согласовании конкретным участником */
    businessJournal.log(document.nodeRef.toString(), 'APPROVAL', 'Сотрудник #object1 принял решение по согласованию документа #mainobject', [employee.nodeRef.toString()]);
  }
})();]]></activiti:string>
            </activiti:field>
          </activiti:taskListener>
        </extensionElements>
        <multiInstanceLoopCharacteristics isSequential="false" activiti:collection="${stageItems}" activiti:elementVariable="currentStageItem">
          <completionCondition>${isCompleted == true}</completionCondition>
        </multiInstanceLoopCharacteristics>
      </userTask>
      <sequenceFlow id="flow17" sourceRef="exclusivegateway3" targetRef="alfrescoScripttask7">
        <conditionExpression xsi:type="tFormalExpression"><![CDATA[${execution.getVariableLocal('stageWorkflowType') == 'PARALLEL'}]]></conditionExpression>
      </sequenceFlow>
      <endEvent id="endevent2" name="End"></endEvent>
      <sequenceFlow id="flow19" sourceRef="exclusivegateway5" targetRef="alfrescoScripttask10"></sequenceFlow>
      <serviceTask id="alfrescoScripttask7" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
        <extensionElements>
          <activiti:field name="runAs">
            <activiti:string><![CDATA[workflow]]></activiti:string>
          </activiti:field>
          <activiti:field name="script">
            <activiti:string><![CDATA[(function(){ /* start */
  var currentStage = execution.getVariable('currentStage');
  var activitiStageItems, stageItems = currentStage.getChildAssocsByType('lecmWorkflowRoutes:stageItem');
  activitiStageItems = approval.getWorkflowNodeConverter().convertNodes(approval.getValueConverter().convertValueForJava(stageItems), true);
  execution.setVariableLocal('stageItems', activitiStageItems);
})();]]></activiti:string>
          </activiti:field>
        </extensionElements>
      </serviceTask>
      <sequenceFlow id="flow20" sourceRef="alfrescoScripttask7" targetRef="usertask2"></sequenceFlow>
      <serviceTask id="alfrescoScripttask9" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
        <extensionElements>
          <activiti:field name="script">
            <activiti:string><![CDATA[(function(){ /* рассылаем уведомление об истечении срока согласования */
  /* получаем настоящий execution */
  var realExecution = (execution.parent) ? execution.parent : execution;

  var document, documentLink, msg;
  var localAssignee = realExecution.getVariableLocal('localAssignee');
  var localDueDate = realExecution.getVariableLocal('localDueDate');
  var isSameDay;
  if (localAssignee && localDueDate) {
    isSameDay = Packages.org.apache.commons.lang.time.DateUtils.isSameDay(localDueDate, approval.getValueConverter().convertValueForJava(new Date()));
    if (isSameDay) {
      document = bpm_package.children[0];
      documentLink = documentScript.wrapperDocumentLink(document, '{lecm-document:ext-present-string}');
      var msg = 'Истек срок согласования Вами документа ' + documentLink + '.';
      notifications.sendNotification([localAssignee.nodeRef.toString()], msg, document);
    }
  }
})();]]></activiti:string>
          </activiti:field>
          <activiti:field name="runAs">
            <activiti:string><![CDATA[workflow]]></activiti:string>
          </activiti:field>
        </extensionElements>
      </serviceTask>
      <boundaryEvent id="boundarytimer1" name="Timer" attachedToRef="usertask2" cancelActivity="false">
        <timerEventDefinition>
          <timeCycle>0 0 2 * * ?</timeCycle>
        </timerEventDefinition>
      </boundaryEvent>
      <boundaryEvent id="boundarytimer2" name="Timer" attachedToRef="usertask1" cancelActivity="false">
        <timerEventDefinition>
          <timeCycle>0 0 2 * * ?</timeCycle>
        </timerEventDefinition>
      </boundaryEvent>
      <sequenceFlow id="flow22" sourceRef="boundarytimer1" targetRef="alfrescoScripttask9"></sequenceFlow>
      <sequenceFlow id="flow23" sourceRef="boundarytimer2" targetRef="alfrescoScripttask9"></sequenceFlow>
      <serviceTask id="alfrescoScripttask10" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
        <extensionElements>
          <activiti:field name="script">
            <activiti:string><![CDATA[(function(){ /* subProcess happy end */
  /* пометка этапа как завершенного */
  var stage = execution.getVariable('currentStage');
  var stageItems = stage.getChildAssocsByType('lecmWorkflowRoutes:stageItem');
  var decisions = ['REJECTED', 'APPROVED_WITH_REMARK', 'APPROVED'];
  var approvalDecision = 'NO_DECISION';
  var currentDecision;
  var i = 0, size = decisions.length;

  function someDecision(element, index, array) {
    return ('' + element.properties['lecmApproveAspects:approvalDecision']) == currentDecision;
  }

  /* установка этапу решения о согласовании */
  for (; i < size; ++i) {
    currentDecision = decisions[i];
    if (stageItems.some(someDecision)) {
      approvalDecision = currentDecision;
      break;
    }
  }

  stage.properties['lecmApproveAspects:approvalState'] = 'COMPLETE';
  stage.properties['lecmApproveAspects:approvalDecision'] = approvalDecision;
  stage.save();
})();]]></activiti:string>
          </activiti:field>
          <activiti:field name="runAs">
            <activiti:string><![CDATA[workflow]]></activiti:string>
          </activiti:field>
        </extensionElements>
      </serviceTask>
      <sequenceFlow id="flow24" sourceRef="alfrescoScripttask10" targetRef="endevent2"></sequenceFlow>
      <sequenceFlow id="flow25" sourceRef="usertask2" targetRef="exclusivegateway5"></sequenceFlow>
    </subProcess>
    <sequenceFlow id="flow3" sourceRef="alfrescoScripttask2" targetRef="subprocess1"></sequenceFlow>
    <serviceTask id="alfrescoScripttask3" name="Alfresco Script Task" activiti:class="org.alfresco.repo.workflow.activiti.script.AlfrescoScriptDelegate">
      <extensionElements>
        <activiti:field name="script">
          <activiti:string><![CDATA[(function(){ /* поиск еще незапущенных этапов */
/*
  установка флага hasNextStage, с учетом флага "завершать после первой визы "не согласен"
*/
  var stage = execution.getVariable('currentStage');
  var stageDecision = '' + stage.properties['lecmApproveAspects:approvalDecision'];
  /* получение коллекции этапов */
  var currentIteration = execution.getVariableLocal('currentIteration');
  var stages = currentIteration.getChildAssocsByType('lecmWorkflowRoutes:stage');
  var i, size, approvalState, hasNextStage, items, isTemp;
  for (i = 0, size = stages.length; i < size; ++i) {
    isTemp = stages[i].hasAspect('sys:temporary') || stage.hasAspect('lecm-workflow:temp');
    approvalState = stages[i].properties['lecmApproveAspects:approvalState'];
    approvalState = (approvalState != null) ? '' + approvalState : null;
    items = stages[i].getChildAssocsByType('lecmWorkflowRoutes:stageItem');
    /* поиск неактивных этапов */
    if (!isTemp && (!approvalState || 'NEW' == approvalState) && items && items.length) {
      hasNextStage = true;
      break;
    }
  }
  hasNextStage = !!(hasNextStage && (!execution.getVariable('routeInterruptAfterReject').booleanValue() || stageDecision != 'REJECTED'));
  execution.setVariableLocal('hasNextStage', hasNextStage);
})();]]></activiti:string>
        </activiti:field>
        <activiti:field name="runAs">
          <activiti:string><![CDATA[workflow]]></activiti:string>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow5" sourceRef="subprocess1" targetRef="alfrescoScripttask3"></sequenceFlow>
    <exclusiveGateway id="exclusivegateway2" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow6" sourceRef="alfrescoScripttask3" targetRef="exclusivegateway2"></sequenceFlow>
    <sequenceFlow id="flow7" sourceRef="exclusivegateway2" targetRef="alfrescoScripttask2">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${execution.getVariableLocal('hasNextStage')}]]></conditionExpression>
    </sequenceFlow>
    <endEvent id="endevent1" name="End"></endEvent>
    <sequenceFlow id="flow8" sourceRef="exclusivegateway2" targetRef="endevent1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${!execution.getVariableLocal('hasNextStage')}]]></conditionExpression>
    </sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_lecmApprovementWorkflow">
    <bpmndi:BPMNPlane bpmnElement="lecmApprovementWorkflow" id="BPMNPlane_lecmApprovementWorkflow">
      <bpmndi:BPMNShape bpmnElement="startevent1" id="BPMNShape_startevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="60.0" y="100.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask1" id="BPMNShape_alfrescoScripttask1">
        <omgdc:Bounds height="55.0" width="105.0" x="160.0" y="90.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask2" id="BPMNShape_alfrescoScripttask2">
        <omgdc:Bounds height="55.0" width="105.0" x="310.0" y="90.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="subprocess1" id="BPMNShape_subprocess1">
        <omgdc:Bounds height="442.0" width="1021.0" x="0.0" y="199.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="startevent2" id="BPMNShape_startevent2">
        <omgdc:Bounds height="35.0" width="35.0" x="18.0" y="386.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask4" id="BPMNShape_alfrescoScripttask4">
        <omgdc:Bounds height="55.0" width="105.0" x="88.0" y="376.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway3" id="BPMNShape_exclusivegateway3">
        <omgdc:Bounds height="40.0" width="40.0" x="228.0" y="383.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask5" id="BPMNShape_alfrescoScripttask5">
        <omgdc:Bounds height="55.0" width="105.0" x="196.0" y="500.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask1" id="BPMNShape_usertask1">
        <omgdc:Bounds height="55.0" width="105.0" x="430.0" y="500.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="boundarytimer2" id="BPMNShape_boundarytimer2">
        <omgdc:Bounds height="30.0" width="30.0" x="468.0" y="489.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask6" id="BPMNShape_alfrescoScripttask6">
        <omgdc:Bounds height="55.0" width="105.0" x="560.0" y="500.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway4" id="BPMNShape_exclusivegateway4">
        <omgdc:Bounds height="40.0" width="40.0" x="698.0" y="507.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway5" id="BPMNShape_exclusivegateway5">
        <omgdc:Bounds height="40.0" width="40.0" x="758.0" y="383.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask2" id="BPMNShape_usertask2">
        <omgdc:Bounds height="55.0" width="105.0" x="430.0" y="250.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="boundarytimer1" id="BPMNShape_boundarytimer1">
        <omgdc:Bounds height="30.0" width="30.0" x="468.0" y="291.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent2" id="BPMNShape_endevent2">
        <omgdc:Bounds height="35.0" width="35.0" x="980.0" y="386.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask7" id="BPMNShape_alfrescoScripttask7">
        <omgdc:Bounds height="55.0" width="105.0" x="196.0" y="250.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask9" id="BPMNShape_alfrescoScripttask9">
        <omgdc:Bounds height="55.0" width="105.0" x="430.0" y="376.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask10" id="BPMNShape_alfrescoScripttask10">
        <omgdc:Bounds height="55.0" width="105.0" x="830.0" y="376.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="alfrescoScripttask3" id="BPMNShape_alfrescoScripttask3">
        <omgdc:Bounds height="55.0" width="105.0" x="760.0" y="90.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway2" id="BPMNShape_exclusivegateway2">
        <omgdc:Bounds height="40.0" width="40.0" x="920.0" y="97.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent1" id="BPMNShape_endevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="1010.0" y="100.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="flow1" id="BPMNEdge_flow1">
        <omgdi:waypoint x="95.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="160.0" y="117.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow2" id="BPMNEdge_flow2">
        <omgdi:waypoint x="265.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="310.0" y="117.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow9" id="BPMNEdge_flow9">
        <omgdi:waypoint x="53.0" y="403.0"></omgdi:waypoint>
        <omgdi:waypoint x="88.0" y="403.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow10" id="BPMNEdge_flow10">
        <omgdi:waypoint x="193.0" y="403.0"></omgdi:waypoint>
        <omgdi:waypoint x="228.0" y="403.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow11" id="BPMNEdge_flow11">
        <omgdi:waypoint x="248.0" y="423.0"></omgdi:waypoint>
        <omgdi:waypoint x="248.0" y="500.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow12" id="BPMNEdge_flow12">
        <omgdi:waypoint x="301.0" y="527.0"></omgdi:waypoint>
        <omgdi:waypoint x="430.0" y="527.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow13" id="BPMNEdge_flow13">
        <omgdi:waypoint x="535.0" y="527.0"></omgdi:waypoint>
        <omgdi:waypoint x="560.0" y="527.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow14" id="BPMNEdge_flow14">
        <omgdi:waypoint x="665.0" y="527.0"></omgdi:waypoint>
        <omgdi:waypoint x="698.0" y="527.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow15" id="BPMNEdge_flow15">
        <omgdi:waypoint x="718.0" y="547.0"></omgdi:waypoint>
        <omgdi:waypoint x="718.0" y="581.0"></omgdi:waypoint>
        <omgdi:waypoint x="653.0" y="581.0"></omgdi:waypoint>
        <omgdi:waypoint x="249.0" y="581.0"></omgdi:waypoint>
        <omgdi:waypoint x="248.0" y="555.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow16" id="BPMNEdge_flow16">
        <omgdi:waypoint x="738.0" y="527.0"></omgdi:waypoint>
        <omgdi:waypoint x="778.0" y="527.0"></omgdi:waypoint>
        <omgdi:waypoint x="778.0" y="423.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow17" id="BPMNEdge_flow17">
        <omgdi:waypoint x="248.0" y="383.0"></omgdi:waypoint>
        <omgdi:waypoint x="248.0" y="305.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow19" id="BPMNEdge_flow19">
        <omgdi:waypoint x="798.0" y="403.0"></omgdi:waypoint>
        <omgdi:waypoint x="830.0" y="403.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow20" id="BPMNEdge_flow20">
        <omgdi:waypoint x="301.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="430.0" y="277.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow22" id="BPMNEdge_flow22">
        <omgdi:waypoint x="483.0" y="321.0"></omgdi:waypoint>
        <omgdi:waypoint x="482.0" y="376.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow23" id="BPMNEdge_flow23">
        <omgdi:waypoint x="483.0" y="489.0"></omgdi:waypoint>
        <omgdi:waypoint x="482.0" y="431.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow24" id="BPMNEdge_flow24">
        <omgdi:waypoint x="935.0" y="403.0"></omgdi:waypoint>
        <omgdi:waypoint x="980.0" y="403.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow25" id="BPMNEdge_flow25">
        <omgdi:waypoint x="535.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="778.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="778.0" y="383.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow3" id="BPMNEdge_flow3">
        <omgdi:waypoint x="415.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="459.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="510.0" y="199.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow5" id="BPMNEdge_flow5">
        <omgdi:waypoint x="510.0" y="199.0"></omgdi:waypoint>
        <omgdi:waypoint x="699.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="760.0" y="117.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow6" id="BPMNEdge_flow6">
        <omgdi:waypoint x="865.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="920.0" y="117.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow7" id="BPMNEdge_flow7">
        <omgdi:waypoint x="940.0" y="97.0"></omgdi:waypoint>
        <omgdi:waypoint x="939.0" y="17.0"></omgdi:waypoint>
        <omgdi:waypoint x="362.0" y="17.0"></omgdi:waypoint>
        <omgdi:waypoint x="362.0" y="90.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow8" id="BPMNEdge_flow8">
        <omgdi:waypoint x="960.0" y="117.0"></omgdi:waypoint>
        <omgdi:waypoint x="1010.0" y="117.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>