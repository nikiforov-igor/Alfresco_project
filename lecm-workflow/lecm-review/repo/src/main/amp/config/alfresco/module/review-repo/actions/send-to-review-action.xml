<?xml version='1.0' encoding='UTF-8'?>
<items updateMode="CreateOrUpdate">
	<item name="cm:Отправить на ознакомление" type="lecm-group-actions:script-action">
		<property name="lecm-group-actions:expression"><![CDATA[doc.hasAspect('lecm-review-ts:review-aspect')]]></property>
		<property name="cm:name"><![CDATA[Отправить на ознакомление]]></property>
		<property name="lecm-group-actions:statuses"><![CDATA[]]></property>
		<property name="lecm-group-actions:isGroup"><![CDATA[false]]></property>
		<property name="lecm-group-actions:forCollection"><![CDATA[false]]></property>
		<property name="lecm-group-actions:script"><![CDATA[(function(){
  model.showModalWindow=true;
  var initiator = orgstructure.getCurrentEmployee();

  var recipients = [];
  var reviewTable = document.associations['lecm-review-ts:review-table-assoc'];
  if (null != reviewTable) {
    var reviewTableData = documentTables.getTableDataRows((reviewTable[0]).nodeRef.toString());
    for each (var row in reviewTableData) {
      	var reviewer = row.associations['lecm-review-ts:reviewer-assoc'][0];
        var itemInitiator = row.assocs["lecm-review-ts:initiator-assoc"];
        if (itemInitiator!=null && itemInitiator.length>0 && initiator.nodeRef.toString().equals(itemInitiator[0].nodeRef.toString())) {
          if (row.properties['lecm-review-ts:review-state']=='NOT_STARTED') {
			documentMembers.addMemberWithoutCheckPermission(document, reviewer, "LECM_BASIC_PG_Reader", true);
            recipients.push(reviewer);
            row.properties['lecm-review-ts:review-state'] = "NOT_REVIEWED";
			row.properties['lecm-review-ts:review-start-date'] = new Date();
            row.save();
          }
        }
    }
  }
  if (recipients.length > 0) {
	notifications.sendNotificationFromCurrentUser({
	  recipients: recipients,
	  templateCode: 'REVIEW_NEED',
	  templateConfig: {
	    mainObject: document,
	    eventExecutor: initiator
	  }
	});
    var logText = "Документ #mainobject направлен на ознакомление пользователем #initiator";
    businessJournal.log(document.nodeRef.toString(), "SEND_TO_REVIEW", logText, []);
    model.message = "Документ отправлен на ознакомление";
  } else {
  	model.message = "Нет сотрудников для ознакомления с документом";
  }
  
})();]]></property>
		<property name="lecm-group-actions:order"><![CDATA[0]]></property>
		<property name="cm:title"><![CDATA[Отправить на ознакомление]]></property>
		<property name="lecm-group-actions:availableForReader"><![CDATA[false]]></property>
	</item>
</items>