<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.it.ru/logicECM/contract/workflow/createOnBasis/1.0">
    <process id="incomingDirectToExecution" name="Направление на исполнение (Входящие)">
        <startEvent id="startIncomingDirectToExecution" name="Start" activiti:formKey="lecmIncomingWf:incomingDirectToExecution"></startEvent>
        <endEvent id="endIncomingDirectToExecution" name="End"></endEvent>
        <scriptTask id="IncomingDirectToExecutionTask" name="Create Sing Contractor" scriptFormat="javascript">
            <extensionElements>
                <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="script">
                        <activiti:string><![CDATA[
                            var incoming = bpm_package.children[0];
                            var recipientAssoc = execution.getVariable("lecmIncomingWf_recipient");
                            if (recipientAssoc != null) {
                                //удалим предыдущих получателей-исполнителей
                                var existRecipientsAssocs = incoming.assocs["lecm-eds-document:recipients-assoc"];
								if (existRecipientsAssocs != null) {
									for (var i = 0; i < existRecipientsAssocs.length; i++) {
								        lecmPermission.revokeDynamicRole(incoming, existRecipientsAssocs[i], "DA_RECIPIENT_DYN");
								        incoming.removeAssociation(existRecipientsAssocs[i], "lecm-eds-document:recipients-assoc");
									}
								}

                                statemachine.grandDynamicRoleForEmployee(incoming, recipientAssoc, "DA_RECIPIENT_DYN");
                                incoming.createAssociation(recipientAssoc, "lecm-eds-document:recipients-assoc");

                                notifications.sendNotificationFromCurrentUser({
                                    recipients: [recipientAssoc],
                                    templateCode: 'INCOMING_RECEIVED',
                                    templateConfig: {
                                        mainObject: incoming
                                    }
                                });

                                var logObjects = [];
				                logObjects.push("" + recipientAssoc.nodeRef.toString());
				                var logText = "#initiator направил(а) документ "
				                + documentScript.wrapperDocumentLink(incoming, "№ {~REGNUM} от {~REGDATE}")
				                + " на исполнение #object1";

				                businessJournal.log(incoming.nodeRef.toString(), "DIRECT_DOCUMENT", substitude.formatNodeTitle(incoming.nodeRef.toString(), logText), logObjects);
                            }
                        ]]></activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
            <script></script>
        </scriptTask>
        <receiveTask id="receivetask" name="Receive Task"></receiveTask>
        <sequenceFlow id="flow1" sourceRef="startIncomingDirectToExecution" targetRef="IncomingDirectToExecutionTask"></sequenceFlow>
        <sequenceFlow id="flow2" sourceRef="IncomingDirectToExecutionTask" targetRef="receivetask"></sequenceFlow>
        <sequenceFlow id="flow3" sourceRef="receivetask" targetRef="endIncomingDirectToExecution"></sequenceFlow>
    </process>
</definitions>