<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>
<beans> 

	<bean id="reporting-repo.bootstrapMyAmpBundlesBean"
		class="org.alfresco.web.app.ResourceBundleBootstrap">
		<property name="resourceBundles">
			<list>
				<value>alfresco.extension.org_alfresco_reporting.messages.webclient</value>
				<value>alfresco.extension.org_alfresco_reporting.messages.reporting</value>
			</list>
		</property>
	</bean>
	
<!--  http://wiki.alfresco.com/wiki/Java-backed_Web_Scripts_Samples#SimpleWebScript.java -->
	<bean id="webscript.ru.it.lecm.reporting.reportingstatus.get"
		    class="ru.it.lecm.reporting.webscript.ReportingStatus"
		    parent="webscript"> 
		<property name="databaseHelperBean">
			<ref bean="alfrescoReportingDatabaseHelper" />
		</property>
	</bean>  
	
	
	<bean id="onCreateDocument_Specialize" 
			class="ru.it.lecm.reporting.behaviour.OnCreateDocument_Specialize"
			init-method="initialise">
		<property name="policyComponent">
			<ref bean="policyComponent" />
		</property>
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
	</bean>
	
	
	<bean id="onCreateFolder_Specialize" 
			class="ru.it.lecm.reporting.behaviour.OnCreateFolder_Specialize"
			init-method="initialise">
		<property name="policyComponent">
			<ref bean="policyComponent" />
		</property>
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
	</bean>
	
	
	<!--  Try again when deploying as a plain amp... -->
	<!-- 
	<bean id="executionFrequencyConstraint" 
			class="reporting-repo.constraints.ExecutionFrequencyListConstraint">
			< init-method="initialize" >
			<property name="properties">
			<ref bean="global-properties" />
		</property>
	</bean>
	-->
	

	<bean id="report-root-executer"
		class="ru.it.lecm.reporting.action.executer.ReportRootExecutor"
		parent="action-executer">
		<property name="searchService">
			<ref bean="SearchService" />
		</property>
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
		<property name="actionService">
			<ref bean="ActionService" />
		</property>
		<property name="reportingHelper">
			<ref bean="ReportingHelper" />
		</property>
		<property name="publicAction" value="false" />
	</bean>	

	<bean id="report-container-executer"
		class="ru.it.lecm.reporting.action.executer.ReportContainerExecutor"
		parent="action-executer">
		<property name="searchService">
			<ref bean="SearchService" />
		</property>
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
		<property name="fileFolderService">
			<ref bean="FileFolderService" />
		</property>
		<property name="actionService">
			<ref bean="ActionService" />
		</property>
		<property name="reportingHelper">
			<ref bean="ReportingHelper" />
		</property>
		<property name="publicAction" value="false" />
	</bean>
		
	<bean id="report-executer"
		class="ru.it.lecm.reporting.action.executer.ReportExecuter"
		parent="action-executer">
		<property name="serviceRegistry">
			<ref bean="ServiceRegistry" />
		</property>
		<property name="properties">
			<ref bean="global-properties" />
		</property>
		<property name="databaseHelperBean">
			<ref bean="alfrescoReportingDatabaseHelper" />
		</property>
		<property name="publicAction" value="false" />
	</bean>

	<bean id="harvesting-executer"
		class="ru.it.lecm.reporting.action.executer.HarvestingExecuter"
		parent="action-executer">
		<property name="serviceRegistry">
			<ref bean="ServiceRegistry" />
		</property>
		<property name="databaseHelperBean">
			<ref bean="alfrescoReportingDatabaseHelper" />
		</property>
		<property name="reportingHelper">
			<ref bean="ReportingHelper" />
		</property>
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
		<property name="searchService">
			<ref bean="SearchService" />
		</property>
        <property name="connectionFactory">
			<ref bean="jmsFactory" />
		</property>
        <property name="templateProducer">
			<ref bean="jmsExternalTemplateProducer" />
		</property>
		<property name="globalProperties">
			<ref bean="global-properties" />
		</property>
		<property name="publicAction" value="false" />
	</bean>	
     
     <bean id="alfrescoReportingDatabaseHelper" 
     		class="ru.it.lecm.reporting.db.DatabaseHelperBean"
     		init-method="init" >
     		<!-- 
		<property name="database" >
			<value>jdbc:mysql://localhost:3306/alfrescoreporting</value>
		</property>
		<property name="jdbcdriver">
			<value>org.gjt.mm.mysql.Driver</value>
		</property>
		<property name="username">
			<value>alfresco</value>
		</property>
		<property name="password">
			<value>alfresco</value>
		</property>
		 -->
		<property name="properties">
            <ref bean="global-properties"/>
        </property>
        <property name="reportingDAOImpl">
            <ref bean="reportingDAO"/>
        </property>
        <property name="workflowDAOImpl">
            <ref bean="workflowDAO"/>
        </property>
		<property name="reportingHelper">
			<ref bean="ReportingHelper" />
		</property>
	</bean>
	
	<bean id="alfrescoReportingScript" 
			parent="baseJavaScriptExtension" 
			class="ru.it.lecm.reporting.script.AlfrescoReporting" >
		<property name="extensionName">
			<value>reporting</value>
		</property>
		<property name="serviceRegistry">
			<ref bean="ServiceRegistry" />
		</property>
		<property name="searchService">
			<ref bean="SearchService" />
		</property>
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
		<property name="authorityService">
			<ref bean="AuthorityService" />
		</property>
		<property name="auditService">
			<ref bean="AuditService" />
		</property>
		<property name="siteService">
			<ref bean="SiteService" />
		</property>
		<property name="databaseHelperBean">
			<ref bean="alfrescoReportingDatabaseHelper" />
		</property>
        <property name="reportingHelper">
			<ref bean="ReportingHelper" />
		</property>
	</bean>
	
    <bean id="mimetypeConfigService" class="org.springframework.extensions.config.xml.XMLConfigService" init-method="init">
        <constructor-arg>
            <bean class="org.springframework.extensions.config.source.UrlConfigSource">
                <constructor-arg>
                    <list> 
                        <value>classpath:alfresco/mimetype/mimetype-map.xml</value>
                        <value>classpath:alfresco/mimetype/mimetype-map-openoffice.xml</value>
                        <value>classpath:alfresco/module/reporting-repo/mimetype/reporting-mimetype-custom-extension.xml</value>
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

	
	<bean id="ReportingHelper" class="ru.it.lecm.reporting.ReportingHelper">
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
		<property name="namespaceService">
			<ref bean="NamespaceService" />
		</property>
		<property name="serviceRegistry">
			<ref bean="ServiceRegistry" />
		</property>
		<property name="hierarchicalResourceLoader" >
			<ref bean="reportingDialectResourceLoader"/>
		</property>	
		<property name="properties">
			<ref bean="global-properties" />
		</property>
        <property name="reportsService" ref="repositoryReportContentBean"/>
        <property name="contentService" ref="ContentService"/>
		<property name="alfrescoDataSource" ref="dataSource"/>
	</bean>

    <bean id="solrClientFactory" class="org.alfresco.httpclient.HttpClientFactory" init-method="init">
        <property name="secureCommsType" value="${solr.secureComms}"/>
        <property name="SSLEncryptionParameters" ref="sslEncryptionParameters"/>
        <property name="keyResourceLoader" ref="springKeyResourceLoader"/>
        <property name="keyStoreParameters" ref="keyStoreParameters"/>
        <property name="encryptionParameters" ref="md5EncryptionParameters"/>
        <property name="host" value="${solr.host}"/>
        <property name="port" value="${solr.port}"/>
        <property name="sslPort" value="${solr.port.ssl}"/>
        <property name="maxTotalConnections" value="${solr.max.total.connections}"/>
        <property name="maxHostConnections" value="${solr.max.host.connections}"/>
    </bean>


    <bean id="inUserOrganizationSQLProcessor" class="ru.it.lecm.reporting.processors.InSameOrganizationSQLProcessor" parent="searchQueryBaseProccesor">
        <property name="id" value="SQL_IN_SAME_ORGANIZATION"/>
        <property name="orgstructureBean" ref="serviceOrgstructure"/>
        <property name="authorityService" ref="authorityService"/>
    </bean>

    <bean id="reporting.LogicEcmDictionariesBootstrap" parent="lecmDictionaryBootstrap"
          depends-on="reportsEditor.LogicEcmDictionariesBootstrap">
        <property name="rootPath" value="/Business platform/LECM/Сервис Редактор Отчетов/Справочники"/>
        <property name="dictionaries">
            <list>
                <value>alfresco/module/reporting-repo/models/sql-provider-bootstrap.xml</value>
            </list>
        </property>
    </bean>

    <bean id="reportingSQLProvider"
          class="ru.it.lecm.reporting.providers.ReportingSQLProvider" depends-on="reportingDataSource" singleton="false">
        <property name="dataSource" ref="reportingDataSource" />
    </bean>

    <bean id="sqlReportingBootstrap" abstract="true" init-method="bootstrap"
          class="ru.it.lecm.reporting.db.SQLReportingBootstrap" depends-on="reportingDAO">
        <property name="bootstrapOnStart" value="#{new Boolean('${lecm.reporting.bootstrapOnStart}')}"/>
        <property name="reportingDAO" ref="reportingDAO"/>
        <property name="transactionService" ref="transactionService" />
    </bean>

    <bean id="updateLastStatusSQL" parent="sqlReportingBootstrap">
        <property name="sqlFiles">
            <list>
                <value>alfresco/module/reporting-repo/sql/update-last-status.sql</value>
            </list>
        </property>
    </bean>
</beans>