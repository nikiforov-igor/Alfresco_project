<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ru.it.lecm.lecm-im</groupId>
        <artifactId>lecm-im</artifactId>
        <version>1.8.7</version>
    </parent>

    <artifactId>lecm-im-share</artifactId>
    <packaging>amp</packaging>
    <name>${project.artifactId}-${project.version}</name>
	<description>Lecm Share XMPP Client</description>
	<!--
		need to list these as a provided so that Maven doesn't download them
		and include them in the AMP, they are provided by Alfresco
	-->
	<dependencies>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-share</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>com.google.gwt</groupId>-->
            <!--<artifactId>gwt-servlet</artifactId>-->
            <!--<version>2.5.0</version>-->
            <!--<scope>runtime</scope>-->
        <!--</dependency>-->
        <dependency>
            <groupId>ru.it.lecm.lecm-im</groupId>
            <artifactId>lecm-im-lib</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>2.5.0</version>
            <scope>provided</scope>
        </dependency>

		<!-- Don't add here amp dependencies as it will break amp packaging -->
	</dependencies>

	<build>
        <plugins>
            <!-- Needed for cross OS compatibility in acp/zip encoding -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
				<artifactId>maven-nosnapshot-plugin</artifactId>
				<groupId>org.alfresco.maven</groupId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
            </plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
            <!-- <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
            </plugin> -->
            <plugin>
                <groupId>org.alfresco.maven.plugin</groupId>
                <artifactId>alfresco-maven-plugin</artifactId>
                <version>1.1.1</version>
                <extensions>true</extensions>
            </plugin>

            <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>gwt-maven-plugin</artifactId>
            <version>2.5.0</version>
            <executions>
                <execution>
                    <goals>
                        <goal>clean</goal>
                        <!--<goal>i18n</goal>-->
                        <goal>compile</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <extraJvmArgs>${gwt.extraJvmArgs}</extraJvmArgs>
                <localWorkers>4</localWorkers>
                <!--<compileReport>true</compileReport>-->
                <!--<optimizationLevel>9</optimizationLevel>-->
                <webappDirectory>${project.build.directory}/${project.build.finalName}/web/scripts</webappDirectory>
                <draftCompile>true</draftCompile>
                <compileSourcesArtifacts>
                    <compileSourcesArtifact>${project.groupId}:lecm-im-lib</compileSourcesArtifact>
                </compileSourcesArtifacts>
            </configuration>
        </plugin>

		</plugins>

		<!--
			Copies and filters resources in build folder so maven-amp-plugin can
			pick them up
		-->
		<resources><resource>
                <filtering>true</filtering>
                <directory>src/main/amp</directory>
                <targetPath>../${project.build.finalName}</targetPath>
                <excludes>
                    <exclude>**README-*</exclude>
                </excludes>
            </resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**README-*</exclude>
				</excludes>
			</resource>
            <resource>
				<filtering>true</filtering>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**.java</exclude>
				</excludes>
			</resource>
            <resource>
                <directory>${basedir}/../lib/src/main/resources</directory>
                <targetPath>${project.build.directory}/${project.build.finalName}/web/scripts</targetPath>
            </resource>
		</resources>
    </build>
</project>
