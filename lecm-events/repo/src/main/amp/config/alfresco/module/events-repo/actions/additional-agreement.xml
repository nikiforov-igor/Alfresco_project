<?xml version='1.0' encoding='UTF-8'?>
<items updateMode="CreateOrUpdate">
    <item name="cm:Отправить на согласование" type="lecm-group-actions:script-action">
        <property name="cm:name"><![CDATA[Отправить на согласование]]></property>
        <property name="lecm-group-actions:statuses"><![CDATA[]]></property>
        <property name="lecm-group-actions:type"><![CDATA[[lecm-events:document]]]></property>
        <property name="lecm-group-actions:order"><![CDATA[0]]></property>
        <property
                name="lecm-group-actions:expression"><![CDATA[user.currentUser().hasDynamicBusinessRole(doc.getNodeRef(), "BR_INITIATOR")]]></property>
        <property name="lecm-group-actions:isGroup"><![CDATA[false]]></property>
        <property name="lecm-group-actions:forCollection"><![CDATA[false]]></property>
        <property name="lecm-group-actions:script"><![CDATA[var table = document.assocs["lecm-events-ts:members-assoc"][0];
if (table != null) {
	var rows = documentTables.getTableDataRows(table.nodeRef.toString());
	if (rows != null) {
		for (var i = 0; i < rows.length; i++) {
			var row = rows[i];

			var employee = row.assocs["lecm-events-ts:members-employee-assoc"][0];
			row.properties["lecm-events-ts:members-status"] = "EMPTY";
			row.properties["lecm-events-ts:members-decline-reason"] = null;
			row.properties["lecm-events-ts:members-from-date"] = null;
			row.properties["lecm-events-ts:members-to-date"] = null;
			row.properties["lecm-events-ts:members-all-day"] = false;
			row.save();

			var currentEmployee = orgstructure.getCurrentEmployee();
			if (currentEmployee != null && employee != null) {
				var notificationText = documentScript.wrapperLink(currentEmployee, currentEmployee.properties["lecm-orgstr:employee-short-name"]);
				notificationText += " просит вас согласовать мероприятие ";
				notificationText += events.wrapperEventLink(document, "{lecm-events:title}");

				var fromDate = document.properties["lecm-events:from-date"];
				if (fromDate != null) {
					var dateFormat = new Packages.java.text.SimpleDateFormat("dd.MM.yyyy");
					var timeFormat = new Packages.java.text.SimpleDateFormat("HH:mm");
					var date = new java.util.Date(fromDate.getTime());

					notificationText += " Начало: ";
					notificationText += dateFormat.format(date);
					notificationText += ", в ";
					notificationText += timeFormat.format(date);
				}

				var recipients = [];
				recipients.push(employee);
				notifications.sendNotificationFromCurrentUser(recipients, notificationText, document);
			}
		}
	}
}
]]></property>
    </item>
</items>